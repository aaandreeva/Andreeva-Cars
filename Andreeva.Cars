{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c3d0a618",
   "metadata": {},
   "source": [
    "# <font color=blue>Домашнее задание №1</font>\n",
    "<font color=red>**Cars** website dataset</font>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6c562554",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import scipy.stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3834545d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>mark</th>\n",
       "      <th>Box</th>\n",
       "      <th>Drive_unit</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Consumption</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Release_start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>Trunk_volume_max</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>9.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>8.9</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>10.7</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>8.9</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>10.7</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>10.7</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0            mark        Box Drive_unit  Seats  Doors Country  \\\n",
       "0               0  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "1               1  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "2               2  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "3               3  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "4               4  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "...           ...             ...        ...        ...    ...    ...     ...   \n",
       "22697       36660       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22698       36661       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22699       36662       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22700       36663       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22701       36664       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "\n",
       "         Engine  Volume   Color  ...  Consumption  \\\n",
       "0        diesel     2.9   black  ...          9.8   \n",
       "1        diesel     2.9   green  ...          9.6   \n",
       "2      gasoline     4.0   black  ...         12.1   \n",
       "3      gasoline     4.0   black  ...         12.1   \n",
       "4      gasoline     4.0    gray  ...         12.1   \n",
       "...         ...     ...     ...  ...          ...   \n",
       "22697  gasoline     2.4  silver  ...          8.9   \n",
       "22698  gasoline     2.7    gray  ...         10.7   \n",
       "22699  gasoline     2.4   black  ...          8.9   \n",
       "22700  gasoline     2.7   black  ...         10.7   \n",
       "22701  gasoline     2.7   black  ...         10.7   \n",
       "\n",
       "                              Engine_Power  Restyling Release_start_series  \\\n",
       "0                                      NaN        0.0               2018.0   \n",
       "1                                      NaN        0.0               2018.0   \n",
       "2                direct injection (direct)        0.0               2018.0   \n",
       "3                direct injection (direct)        0.0               2018.0   \n",
       "4                direct injection (direct)        0.0               2018.0   \n",
       "...                                    ...        ...                  ...   \n",
       "22697  distributed injection (multi-point)        0.0               2006.0   \n",
       "22698  distributed injection (multi-point)        0.0               2006.0   \n",
       "22699  distributed injection (multi-point)        0.0               2006.0   \n",
       "22700  distributed injection (multi-point)        0.0               2006.0   \n",
       "22701  distributed injection (multi-point)        0.0               2006.0   \n",
       "\n",
       "      End_Serial Trunk_volume_max Trunk_volume_min Expense_city Expense_track  \\\n",
       "0         2020.0            667.0           1941.0         11.5           9.2   \n",
       "1         2020.0            667.0           1941.0         10.8           8.9   \n",
       "2         2020.0            667.0           1941.0         14.1          10.8   \n",
       "3         2020.0            667.0           1941.0         14.1          10.8   \n",
       "4         2020.0            667.0           1941.0         14.1          10.8   \n",
       "...          ...              ...              ...          ...           ...   \n",
       "22697     2010.0            441.0              0.0         12.3           6.9   \n",
       "22698     2010.0            441.0              0.0         12.4           8.7   \n",
       "22699     2010.0            441.0              0.0         12.3           6.9   \n",
       "22700     2010.0            441.0              0.0         12.4           8.7   \n",
       "22701     2010.0            441.0              0.0         12.4           8.7   \n",
       "\n",
       "      Consumption_average  \n",
       "0                     9.8  \n",
       "1                     9.6  \n",
       "2                    12.1  \n",
       "3                    12.1  \n",
       "4                    12.1  \n",
       "...                   ...  \n",
       "22697                 8.9  \n",
       "22698                10.7  \n",
       "22699                 8.9  \n",
       "22700                10.7  \n",
       "22701                10.7  \n",
       "\n",
       "[22702 rows x 55 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars = pd.read_csv('cars_dataset.csv')\n",
    "cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a7986deb",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22702 entries, 0 to 22701\n",
      "Data columns (total 55 columns):\n",
      " #   Column                               Non-Null Count  Dtype  \n",
      "---  ------                               --------------  -----  \n",
      " 0   Unnamed: 0                           22702 non-null  int64  \n",
      " 1   mark                                 22702 non-null  object \n",
      " 2   Box                                  22702 non-null  object \n",
      " 3   Drive_unit                           22702 non-null  object \n",
      " 4   Seats                                22702 non-null  float64\n",
      " 5   Doors                                22702 non-null  float64\n",
      " 6   Country                              22702 non-null  object \n",
      " 7   Engine                               22702 non-null  object \n",
      " 8   Volume                               22702 non-null  float64\n",
      " 9   Color                                22702 non-null  object \n",
      " 10  Mileage                              22702 non-null  float64\n",
      " 11  Price                                22702 non-null  float64\n",
      " 12  Year                                 22702 non-null  float64\n",
      " 13  Car_type                             22702 non-null  object \n",
      " 14  Generation                           22702 non-null  object \n",
      " 15  Model                                22702 non-null  object \n",
      " 16  Drive                                22511 non-null  object \n",
      " 17  Boost_type                           22419 non-null  object \n",
      " 18  Cylinder_location                    22455 non-null  object \n",
      " 19  Front_brakes                         22511 non-null  object \n",
      " 20  Engine_volume                        22702 non-null  float64\n",
      " 21  Width                                22702 non-null  float64\n",
      " 22  Front_Suspension_type                22511 non-null  object \n",
      " 23  Diameter_cylinder_and_stroke_piston  22702 non-null  float64\n",
      " 24  Maximum_power                        22702 non-null  float64\n",
      " 25  Length                               22702 non-null  float64\n",
      " 26  Car_class                            22481 non-null  object \n",
      " 27  Wheelbase                            22702 non-null  float64\n",
      " 28  Cylinders                            22702 non-null  float64\n",
      " 29  Height                               22702 non-null  float64\n",
      " 30  Fuel                                 22283 non-null  object \n",
      " 31  Torque                               22702 non-null  float64\n",
      " 32  Valves_per_cylinder                  22702 non-null  float64\n",
      " 33  Volume_fuel_tank                     22702 non-null  float64\n",
      " 34  Rear_track_width                     22702 non-null  float64\n",
      " 35  Front_track_width                    22702 non-null  float64\n",
      " 36  Curb_weight_kg                       22702 non-null  float64\n",
      " 37  Clearance                            22702 non-null  float64\n",
      " 38  Engine_Location                      21345 non-null  object \n",
      " 39  Maximum_speed                        22702 non-null  float64\n",
      " 40  Wheel_size                           21162 non-null  object \n",
      " 41  Transmissions                        22702 non-null  float64\n",
      " 42  Speed_to_100                         22702 non-null  float64\n",
      " 43  Full_weight                          22702 non-null  float64\n",
      " 44  Compression_ratio                    22702 non-null  float64\n",
      " 45  Consumption                          22702 non-null  float64\n",
      " 46  Engine_Power                         19140 non-null  object \n",
      " 47  Restyling                            22702 non-null  float64\n",
      " 48  Release_start_series                 22702 non-null  float64\n",
      " 49  End_Serial                           22702 non-null  float64\n",
      " 50  Trunk_volume_max                     22702 non-null  float64\n",
      " 51  Trunk_volume_min                     22702 non-null  float64\n",
      " 52  Expense_city                         22702 non-null  float64\n",
      " 53  Expense_track                        22702 non-null  float64\n",
      " 54  Consumption_average                  22702 non-null  float64\n",
      "dtypes: float64(35), int64(1), object(19)\n",
      "memory usage: 9.5+ MB\n"
     ]
    }
   ],
   "source": [
    "cars.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "21f42e3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(22702, 55)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1598b30a",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>mark</th>\n",
       "      <th>Box</th>\n",
       "      <th>Drive_unit</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Release_start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>Trunk_volume_max</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0            mark        Box Drive_unit  Seats  Doors Country  \\\n",
       "0               0  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "1               1  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "2               2  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "3               3  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "4               4  Mercedes-Benz   automatic       full    5.0    5.0  German   \n",
       "...           ...             ...        ...        ...    ...    ...     ...   \n",
       "22697       36660       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22698       36661       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22699       36662       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22700       36663       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "22701       36664       Chrysler   automatic      front    5.0    4.0     USA   \n",
       "\n",
       "         Engine  Volume   Color  ...                         Engine_Power  \\\n",
       "0        diesel     2.9   black  ...                                  NaN   \n",
       "1        diesel     2.9   green  ...                                  NaN   \n",
       "2      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "3      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "4      gasoline     4.0    gray  ...            direct injection (direct)   \n",
       "...         ...     ...     ...  ...                                  ...   \n",
       "22697  gasoline     2.4  silver  ...  distributed injection (multi-point)   \n",
       "22698  gasoline     2.7    gray  ...  distributed injection (multi-point)   \n",
       "22699  gasoline     2.4   black  ...  distributed injection (multi-point)   \n",
       "22700  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "22701  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "\n",
       "       Restyling  Release_start_series End_Serial Trunk_volume_max  \\\n",
       "0            0.0                2018.0     2020.0            667.0   \n",
       "1            0.0                2018.0     2020.0            667.0   \n",
       "2            0.0                2018.0     2020.0            667.0   \n",
       "3            0.0                2018.0     2020.0            667.0   \n",
       "4            0.0                2018.0     2020.0            667.0   \n",
       "...          ...                   ...        ...              ...   \n",
       "22697        0.0                2006.0     2010.0            441.0   \n",
       "22698        0.0                2006.0     2010.0            441.0   \n",
       "22699        0.0                2006.0     2010.0            441.0   \n",
       "22700        0.0                2006.0     2010.0            441.0   \n",
       "22701        0.0                2006.0     2010.0            441.0   \n",
       "\n",
       "      Trunk_volume_min Expense_city Expense_track Consumption_average  \\\n",
       "0               1941.0         11.5           9.2                 9.8   \n",
       "1               1941.0         10.8           8.9                 9.6   \n",
       "2               1941.0         14.1          10.8                12.1   \n",
       "3               1941.0         14.1          10.8                12.1   \n",
       "4               1941.0         14.1          10.8                12.1   \n",
       "...                ...          ...           ...                 ...   \n",
       "22697              0.0         12.3           6.9                 8.9   \n",
       "22698              0.0         12.4           8.7                10.7   \n",
       "22699              0.0         12.3           6.9                 8.9   \n",
       "22700              0.0         12.4           8.7                10.7   \n",
       "22701              0.0         12.4           8.7                10.7   \n",
       "\n",
       "      Expense_average  \n",
       "0               10.35  \n",
       "1                9.85  \n",
       "2               12.45  \n",
       "3               12.45  \n",
       "4               12.45  \n",
       "...               ...  \n",
       "22697            9.60  \n",
       "22698           10.55  \n",
       "22699            9.60  \n",
       "22700           10.55  \n",
       "22701           10.55  \n",
       "\n",
       "[22702 rows x 56 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Expense_average'] = cars['Expense_city'] / 2 + cars['Expense_track'] / 2\n",
    "cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5da9a3d9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'mark', 'Box', 'Drive_unit', 'Seats', 'Doors', 'Country',\n",
       "       'Engine', 'Volume', 'Color', 'Mileage', 'Price', 'Year', 'Car_type',\n",
       "       'Generation', 'Model', 'Drive', 'Boost_type', 'Cylinder_location',\n",
       "       'Front_brakes', 'Engine_volume', 'Width', 'Front_Suspension_type',\n",
       "       'Diameter_cylinder_and_stroke_piston', 'Maximum_power', 'Length',\n",
       "       'Car_class', 'Wheelbase', 'Cylinders', 'Height', 'Fuel', 'Torque',\n",
       "       'Valves_per_cylinder', 'Volume_fuel_tank', 'Rear_track_width',\n",
       "       'Front_track_width', 'Curb_weight_kg', 'Clearance', 'Engine_Location',\n",
       "       'Maximum_speed', 'Wheel_size', 'Transmissions', 'Speed_to_100',\n",
       "       'Full_weight', 'Compression_ratio', 'Consumption', 'Engine_Power',\n",
       "       'Restyling', 'Release_start_series', 'End_Serial', 'Trunk_volume_max',\n",
       "       'Trunk_volume_min', 'Expense_city', 'Expense_track',\n",
       "       'Consumption_average', 'Expense_average'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8c1292eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "0          0  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "1          1  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "2          2  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "3          3  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "4          4  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22697  36660       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22698  36661       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22699  36662       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22700  36663       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22701  36664       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "\n",
       "         Engine  Volume   Color  ...                         Engine_Power  \\\n",
       "0        diesel     2.9   black  ...                                  NaN   \n",
       "1        diesel     2.9   green  ...                                  NaN   \n",
       "2      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "3      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "4      gasoline     4.0    gray  ...            direct injection (direct)   \n",
       "...         ...     ...     ...  ...                                  ...   \n",
       "22697  gasoline     2.4  silver  ...  distributed injection (multi-point)   \n",
       "22698  gasoline     2.7    gray  ...  distributed injection (multi-point)   \n",
       "22699  gasoline     2.4   black  ...  distributed injection (multi-point)   \n",
       "22700  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "22701  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "0            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "1            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "2            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "3            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "4            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "22697        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22698        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22699        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22700        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22701        0.0        2006.0     2010.0  441.0              0.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "0             11.5           9.2                 9.8           10.35  \n",
       "1             10.8           8.9                 9.6            9.85  \n",
       "2             14.1          10.8                12.1           12.45  \n",
       "3             14.1          10.8                12.1           12.45  \n",
       "4             14.1          10.8                12.1           12.45  \n",
       "...            ...           ...                 ...             ...  \n",
       "22697         12.3           6.9                 8.9            9.60  \n",
       "22698         12.4           8.7                10.7           10.55  \n",
       "22699         12.3           6.9                 8.9            9.60  \n",
       "22700         12.4           8.7                10.7           10.55  \n",
       "22701         12.4           8.7                10.7           10.55  \n",
       "\n",
       "[22702 rows x 56 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.columns = ['id', 'mk', 'Box', 'DU', 'Seats', 'Doors', 'Country',\n",
    "       'Engine', 'Volume', 'Color', 'Mileage', 'Price', 'Year', 'Car_type',\n",
    "       'Gen', 'Model', 'Drive', 'Boost_type', 'Cylinder',\n",
    "       'Front_brakes', 'Engine_volume', 'Width', 'Susp_t',\n",
    "       'Diameter_cyl', 'MP', 'Length',\n",
    "       'Car_class', 'Wheelbase', 'Cylinders', 'Height', 'Fuel', 'Torque',\n",
    "       'VPC', 'Tank_volume', 'Rear_track_width',\n",
    "       'Front_track_width', 'Curb_weight_kg', 'Clearance', 'Engine_Location',\n",
    "       'Maximum_speed', 'Wheel_size', 'Transmissions', 'Speed_to_100',\n",
    "       'Full_weight', 'Compression_ratio', 'Consumption', 'Engine_Power',\n",
    "       'Restyling', 'Start_series', 'End_Serial', 'TVM',\n",
    "       'Trunk_volume_min', 'Expense_city', 'Expense_track',\n",
    "       'Consumption_average', 'Expense_average']\n",
    "cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "92ee5168",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                        50\n",
       "mk                            Mercedes-Benz \n",
       "Box                                automatic\n",
       "DU                                      full\n",
       "Seats                                    5.0\n",
       "Doors                                    5.0\n",
       "Country                               German\n",
       "Engine                                diesel\n",
       "Volume                                   2.9\n",
       "Color                                   blue\n",
       "Mileage                                  0.0\n",
       "Price                              8158200.0\n",
       "Year                                  2020.0\n",
       "Car_type                                 SUV\n",
       "Gen                    II (C167) 2019 – now \n",
       "Model                             GLE Coupe \n",
       "Drive                                   full\n",
       "Boost_type                     turbocharging\n",
       "Cylinder                             in-line\n",
       "Front_brakes                 disc ventilated\n",
       "Engine_volume                         2925.0\n",
       "Width                                 2010.0\n",
       "Susp_t                   independent, spring\n",
       "Diameter_cyl                            82.0\n",
       "MP                                     249.0\n",
       "Length                                4939.0\n",
       "Car_class                                  J\n",
       "Wheelbase                             2935.0\n",
       "Cylinders                                6.0\n",
       "Height                                1730.0\n",
       "Fuel                                  diesel\n",
       "Torque                                 600.0\n",
       "VPC                                      4.0\n",
       "Tank_volume                             65.0\n",
       "Rear_track_width                      1726.0\n",
       "Front_track_width                     1680.0\n",
       "Curb_weight_kg                        2290.0\n",
       "Clearance                              206.0\n",
       "Engine_Location            front, transverse\n",
       "Maximum_speed                          226.0\n",
       "Wheel_size                        275/55/R19\n",
       "Transmissions                            9.0\n",
       "Speed_to_100                             6.6\n",
       "Full_weight                           3040.0\n",
       "Compression_ratio                       15.5\n",
       "Consumption                              8.0\n",
       "Engine_Power                             NaN\n",
       "Restyling                                0.0\n",
       "Start_series                          2019.0\n",
       "End_Serial                            2020.0\n",
       "TVM                                    655.0\n",
       "Trunk_volume_min                      1790.0\n",
       "Expense_city                            10.2\n",
       "Expense_track                            6.7\n",
       "Consumption_average                      8.0\n",
       "Expense_average                         8.45\n",
       "Name: 50, dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.iloc[50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fe5bde15",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                                        50\n",
       "mk                            Mercedes-Benz \n",
       "Box                                automatic\n",
       "DU                                      full\n",
       "Seats                                    5.0\n",
       "Doors                                    5.0\n",
       "Country                               German\n",
       "Engine                                diesel\n",
       "Volume                                   2.9\n",
       "Color                                   blue\n",
       "Mileage                                  0.0\n",
       "Price                              8158200.0\n",
       "Year                                  2020.0\n",
       "Car_type                                 SUV\n",
       "Gen                    II (C167) 2019 – now \n",
       "Model                             GLE Coupe \n",
       "Drive                                   full\n",
       "Boost_type                     turbocharging\n",
       "Cylinder                             in-line\n",
       "Front_brakes                 disc ventilated\n",
       "Engine_volume                         2925.0\n",
       "Width                                 2010.0\n",
       "Susp_t                   independent, spring\n",
       "Diameter_cyl                            82.0\n",
       "MP                                     249.0\n",
       "Length                                4939.0\n",
       "Car_class                                  J\n",
       "Wheelbase                             2935.0\n",
       "Cylinders                                6.0\n",
       "Height                                1730.0\n",
       "Fuel                                  diesel\n",
       "Torque                                 600.0\n",
       "VPC                                      4.0\n",
       "Tank_volume                             65.0\n",
       "Rear_track_width                      1726.0\n",
       "Front_track_width                     1680.0\n",
       "Curb_weight_kg                        2290.0\n",
       "Clearance                              206.0\n",
       "Engine_Location            front, transverse\n",
       "Maximum_speed                          226.0\n",
       "Wheel_size                        275/55/R19\n",
       "Transmissions                            9.0\n",
       "Speed_to_100                             6.6\n",
       "Full_weight                           3040.0\n",
       "Compression_ratio                       15.5\n",
       "Consumption                              8.0\n",
       "Engine_Power                             NaN\n",
       "Restyling                                0.0\n",
       "Start_series                          2019.0\n",
       "End_Serial                            2020.0\n",
       "TVM                                    655.0\n",
       "Trunk_volume_min                      1790.0\n",
       "Expense_city                            10.2\n",
       "Expense_track                            6.7\n",
       "Consumption_average                      8.0\n",
       "Expense_average                         8.45\n",
       "Name: 50, dtype: object"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.loc[50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2c2fc8da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Mercedes-Benz '"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.iloc[50, 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "29cae010",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Mercedes-Benz '"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['mk'][50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1067d74e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2   2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3   3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4   4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "5   5  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "6   6  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "7   7  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "8   8  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "9   9  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "\n",
       "   Volume  Color  ...               Engine_Power  Restyling  Start_series  \\\n",
       "0     2.9  black  ...                        NaN        0.0        2018.0   \n",
       "1     2.9  green  ...                        NaN        0.0        2018.0   \n",
       "2     4.0  black  ...  direct injection (direct)        0.0        2018.0   \n",
       "3     4.0  black  ...  direct injection (direct)        0.0        2018.0   \n",
       "4     4.0   gray  ...  direct injection (direct)        0.0        2018.0   \n",
       "5     2.9  black  ...                        NaN        0.0        2018.0   \n",
       "6     2.9  black  ...                        NaN        0.0        2018.0   \n",
       "7     2.9  black  ...                        NaN        0.0        2018.0   \n",
       "8     4.0   gray  ...  direct injection (direct)        0.0        2018.0   \n",
       "9     2.9   blue  ...                        NaN        0.0        2018.0   \n",
       "\n",
       "  End_Serial    TVM Trunk_volume_min Expense_city Expense_track  \\\n",
       "0     2020.0  667.0           1941.0         11.5           9.2   \n",
       "1     2020.0  667.0           1941.0         10.8           8.9   \n",
       "2     2020.0  667.0           1941.0         14.1          10.8   \n",
       "3     2020.0  667.0           1941.0         14.1          10.8   \n",
       "4     2020.0  667.0           1941.0         14.1          10.8   \n",
       "5     2020.0  667.0           1941.0         10.8           8.9   \n",
       "6     2020.0  667.0           1941.0         11.5           9.2   \n",
       "7     2020.0  667.0           1941.0         11.5           9.2   \n",
       "8     2020.0  667.0           1941.0         14.1          10.8   \n",
       "9     2020.0  667.0           1941.0         11.5           9.2   \n",
       "\n",
       "  Consumption_average Expense_average  \n",
       "0                 9.8           10.35  \n",
       "1                 9.6            9.85  \n",
       "2                12.1           12.45  \n",
       "3                12.1           12.45  \n",
       "4                12.1           12.45  \n",
       "5                 9.6            9.85  \n",
       "6                 9.8           10.35  \n",
       "7                 9.8           10.35  \n",
       "8                12.1           12.45  \n",
       "9                 9.8           10.35  \n",
       "\n",
       "[10 rows x 56 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "51a1de08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22692</th>\n",
       "      <td>36655</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22693</th>\n",
       "      <td>36656</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>beige</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22694</th>\n",
       "      <td>36657</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>red</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22695</th>\n",
       "      <td>36658</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22696</th>\n",
       "      <td>36659</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id         mk        Box     DU  Seats  Doors Country    Engine  \\\n",
       "22692  36655  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22693  36656  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22694  36657  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22695  36658  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22696  36659  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22697  36660  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22698  36661  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22699  36662  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22700  36663  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "22701  36664  Chrysler   automatic  front    5.0    4.0     USA  gasoline   \n",
       "\n",
       "       Volume   Color  ...                         Engine_Power  Restyling  \\\n",
       "22692     2.7   black  ...  distributed injection (multi-point)        0.0   \n",
       "22693     2.4   beige  ...  distributed injection (multi-point)        0.0   \n",
       "22694     2.4     red  ...  distributed injection (multi-point)        0.0   \n",
       "22695     2.4    gray  ...  distributed injection (multi-point)        0.0   \n",
       "22696     2.7   black  ...  distributed injection (multi-point)        0.0   \n",
       "22697     2.4  silver  ...  distributed injection (multi-point)        0.0   \n",
       "22698     2.7    gray  ...  distributed injection (multi-point)        0.0   \n",
       "22699     2.4   black  ...  distributed injection (multi-point)        0.0   \n",
       "22700     2.7   black  ...  distributed injection (multi-point)        0.0   \n",
       "22701     2.7   black  ...  distributed injection (multi-point)        0.0   \n",
       "\n",
       "       Start_series End_Serial    TVM Trunk_volume_min Expense_city  \\\n",
       "22692        2006.0     2010.0  441.0              0.0         12.4   \n",
       "22693        2006.0     2010.0  441.0              0.0         12.3   \n",
       "22694        2006.0     2010.0  441.0              0.0         12.3   \n",
       "22695        2006.0     2010.0  441.0              0.0         12.3   \n",
       "22696        2006.0     2010.0  441.0              0.0         12.4   \n",
       "22697        2006.0     2010.0  441.0              0.0         12.3   \n",
       "22698        2006.0     2010.0  441.0              0.0         12.4   \n",
       "22699        2006.0     2010.0  441.0              0.0         12.3   \n",
       "22700        2006.0     2010.0  441.0              0.0         12.4   \n",
       "22701        2006.0     2010.0  441.0              0.0         12.4   \n",
       "\n",
       "      Expense_track Consumption_average Expense_average  \n",
       "22692           8.7                10.7           10.55  \n",
       "22693           6.9                 8.9            9.60  \n",
       "22694           6.9                 8.9            9.60  \n",
       "22695           6.9                 8.9            9.60  \n",
       "22696           8.7                10.7           10.55  \n",
       "22697           6.9                 8.9            9.60  \n",
       "22698           8.7                10.7           10.55  \n",
       "22699           6.9                 8.9            9.60  \n",
       "22700           8.7                10.7           10.55  \n",
       "22701           8.7                10.7           10.55  \n",
       "\n",
       "[10 rows x 56 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0b076868",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>725</th>\n",
       "      <td>725</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>726</th>\n",
       "      <td>726</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>727</th>\n",
       "      <td>727</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>8.9</td>\n",
       "      <td>11.3</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>728</th>\n",
       "      <td>728</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>8.9</td>\n",
       "      <td>11.3</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>729</th>\n",
       "      <td>729</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>730</th>\n",
       "      <td>730</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>8.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>731</th>\n",
       "      <td>731</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>8.9</td>\n",
       "      <td>11.3</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>732</th>\n",
       "      <td>732</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>456.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.2</td>\n",
       "      <td>8.9</td>\n",
       "      <td>11.2</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>733</th>\n",
       "      <td>733</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>734</th>\n",
       "      <td>734</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>735</th>\n",
       "      <td>735</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>736</th>\n",
       "      <td>736</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>737</th>\n",
       "      <td>737</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>738</th>\n",
       "      <td>738</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>combined injection (direct-distributed)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>5.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>739</th>\n",
       "      <td>739</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>beige</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>740</th>\n",
       "      <td>740</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>741</th>\n",
       "      <td>741</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>742</th>\n",
       "      <td>742</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>743</th>\n",
       "      <td>743</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>744</th>\n",
       "      <td>744</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>745</th>\n",
       "      <td>745</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>746</th>\n",
       "      <td>746</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>combined injection (direct-distributed)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>5.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>747</th>\n",
       "      <td>747</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>combined injection (direct-distributed)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>5.5</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>748</th>\n",
       "      <td>748</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.5</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>12.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>9.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>749</th>\n",
       "      <td>749</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.5</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>428.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>6.4</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.95</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>25 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      id              mk        Box     DU  Seats  Doors Country    Engine  \\\n",
       "725  725  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "726  726  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "727  727  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "728  728  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "729  729  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "730  730  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "731  731  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "732  732  Mercedes-Benz       robot   full    5.0    5.0  German  gasoline   \n",
       "733  733         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "734  734         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "735  735         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "736  736         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "737  737         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "738  738         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "739  739         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "740  740         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "741  741         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "742  742         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "743  743         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "744  744         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "745  745         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "746  746         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "747  747         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "748  748         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "749  749         Toyota   automatic  front    5.0    4.0   Japan  gasoline   \n",
       "\n",
       "     Volume   Color  ...                             Engine_Power  Restyling  \\\n",
       "725     3.0    gray  ...                direct injection (direct)        1.0   \n",
       "726     3.0   black  ...                direct injection (direct)        1.0   \n",
       "727     4.0    gray  ...                direct injection (direct)        1.0   \n",
       "728     4.0   white  ...                direct injection (direct)        1.0   \n",
       "729     3.0   white  ...                direct injection (direct)        1.0   \n",
       "730     3.0   black  ...                direct injection (direct)        1.0   \n",
       "731     4.0   white  ...                direct injection (direct)        1.0   \n",
       "732     4.0   white  ...                direct injection (direct)        1.0   \n",
       "733     2.5   black  ...      distributed injection (multi-point)        0.0   \n",
       "734     3.5   black  ...                direct injection (direct)        0.0   \n",
       "735     2.5   white  ...      distributed injection (multi-point)        0.0   \n",
       "736     3.5   white  ...                direct injection (direct)        0.0   \n",
       "737     3.5   black  ...                direct injection (direct)        0.0   \n",
       "738     2.0   white  ...  combined injection (direct-distributed)        0.0   \n",
       "739     2.5   beige  ...      distributed injection (multi-point)        0.0   \n",
       "740     3.5   black  ...                direct injection (direct)        0.0   \n",
       "741     3.5   black  ...                direct injection (direct)        0.0   \n",
       "742     2.5   black  ...      distributed injection (multi-point)        0.0   \n",
       "743     2.5   white  ...      distributed injection (multi-point)        0.0   \n",
       "744     2.5   black  ...      distributed injection (multi-point)        0.0   \n",
       "745     2.5   white  ...      distributed injection (multi-point)        0.0   \n",
       "746     2.0  silver  ...  combined injection (direct-distributed)        0.0   \n",
       "747     2.0   white  ...  combined injection (direct-distributed)        0.0   \n",
       "748     3.5   white  ...                direct injection (direct)        0.0   \n",
       "749     2.5   black  ...      distributed injection (multi-point)        0.0   \n",
       "\n",
       "     Start_series End_Serial    TVM Trunk_volume_min Expense_city  \\\n",
       "725        2017.0     2020.0  456.0              0.0         12.3   \n",
       "726        2017.0     2020.0  456.0              0.0         12.3   \n",
       "727        2017.0     2020.0  456.0              0.0         15.2   \n",
       "728        2017.0     2020.0  456.0              0.0         15.2   \n",
       "729        2017.0     2020.0  456.0              0.0         12.3   \n",
       "730        2017.0     2020.0  456.0              0.0         12.3   \n",
       "731        2017.0     2020.0  456.0              0.0         15.2   \n",
       "732        2017.0     2020.0  456.0              0.0         15.2   \n",
       "733        2017.0     2020.0  400.0            428.0         11.5   \n",
       "734        2017.0     2020.0  400.0            428.0         12.5   \n",
       "735        2017.0     2020.0  400.0            428.0         11.5   \n",
       "736        2017.0     2020.0  400.0            428.0         12.5   \n",
       "737        2017.0     2020.0  400.0            428.0         12.5   \n",
       "738        2017.0     2020.0  400.0            428.0          9.7   \n",
       "739        2017.0     2020.0  400.0            428.0         11.5   \n",
       "740        2017.0     2020.0  400.0            428.0         12.5   \n",
       "741        2017.0     2020.0  400.0            428.0         12.5   \n",
       "742        2017.0     2020.0  400.0            428.0         11.5   \n",
       "743        2017.0     2020.0  400.0            428.0         11.5   \n",
       "744        2017.0     2020.0  400.0            428.0         11.5   \n",
       "745        2017.0     2020.0  400.0            428.0         11.5   \n",
       "746        2017.0     2020.0  400.0            428.0          9.7   \n",
       "747        2017.0     2020.0  400.0            428.0          9.7   \n",
       "748        2017.0     2020.0  400.0            428.0         12.5   \n",
       "749        2017.0     2020.0  400.0            428.0         11.5   \n",
       "\n",
       "    Expense_track Consumption_average Expense_average  \n",
       "725           8.0                 9.4           10.15  \n",
       "726           8.0                 9.4           10.15  \n",
       "727           8.9                11.3           12.05  \n",
       "728           8.9                11.3           12.05  \n",
       "729           8.0                 9.4           10.15  \n",
       "730           8.0                 9.4           10.15  \n",
       "731           8.9                11.3           12.05  \n",
       "732           8.9                11.2           12.05  \n",
       "733           6.4                 8.3            8.95  \n",
       "734           6.4                 8.7            9.45  \n",
       "735           6.4                 8.3            8.95  \n",
       "736           6.4                 8.7            9.45  \n",
       "737           6.4                 8.7            9.45  \n",
       "738           5.5                 7.1            7.60  \n",
       "739           6.4                 8.3            8.95  \n",
       "740           6.4                 8.7            9.45  \n",
       "741           6.4                 8.7            9.45  \n",
       "742           6.4                 8.3            8.95  \n",
       "743           6.4                 8.3            8.95  \n",
       "744           6.4                 8.3            8.95  \n",
       "745           6.4                 8.3            8.95  \n",
       "746           5.5                 7.1            7.60  \n",
       "747           5.5                 7.1            7.60  \n",
       "748           6.4                 8.7            9.45  \n",
       "749           6.4                 8.3            8.95  \n",
       "\n",
       "[25 rows x 56 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.iloc[725:750]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "dd3f8762",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        Mercedes-Benz \n",
       "1        Mercedes-Benz \n",
       "2        Mercedes-Benz \n",
       "3        Mercedes-Benz \n",
       "4        Mercedes-Benz \n",
       "              ...      \n",
       "22697         Chrysler \n",
       "22698         Chrysler \n",
       "22699         Chrysler \n",
       "22700         Chrysler \n",
       "22701         Chrysler \n",
       "Name: mk, Length: 22702, dtype: object"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['mk']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4acac521",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Mercedes-Benz ', 'Mitsubishi ', 'Audi ', 'Volkswagen ', 'Jaguar ',\n",
       "       'Nissan ', 'Infiniti ', 'Skoda ', 'Haval ', 'Renault ',\n",
       "       'LADA (VAZ) ', 'Jeep ', 'Volvo ', 'BMW ', 'Toyota ', 'Land Rover ',\n",
       "       'MINI ', 'Hyundai ', 'YAZ ', 'Suzuki ', 'Citroen ', 'Peugeot ',\n",
       "       'Changan ', 'Chevrolet ', 'Bentley ', 'Cadillac ', 'Lamborghini ',\n",
       "       'Kia ', 'Rolls-Royce ', 'Lexus ', 'Subaru ', 'Dodge ', 'Porsche ',\n",
       "       'Genesis ', 'Honda ', 'Lincoln ', 'Mazda ', 'Ford ', 'Geely ',\n",
       "       'Opel ', 'Smart ', 'AC ', 'Chery ', 'Tesla ', 'TagAZ ',\n",
       "       'Great Wall ', 'SsangYong ', 'GAZ ', 'SEAT ', 'Fiat ', 'Datsun ',\n",
       "       'Acura ', 'Daewoo ', 'Ravon ', 'Isuzu ', 'Lifan ', 'Chrysler ',\n",
       "       'Ferrari ', 'Luxgen ', 'Vortex ', 'Moskvich ', 'Daihatsu ',\n",
       "       'Saab ', 'DongFeng ', 'ZAZ ', 'Alfa Romeo ', 'Iran Khodro ',\n",
       "       'GMC ', 'Maserati ', 'Maybach ', 'Hummer ', 'DW Hower ', 'FAW ',\n",
       "       'Hawtai ', 'LyAZ ', 'Rover ', 'McLaren ', 'ZX ', 'Aston Martin ',\n",
       "       'AMC ', 'Daimler ', 'ZIL', 'ICH', 'Race car ', 'Scion '],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['mk'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "95a725c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Torque</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>12902800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>700.0</td>\n",
       "      <td>15709500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>610.0</td>\n",
       "      <td>13890000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>610.0</td>\n",
       "      <td>13116000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>610.0</td>\n",
       "      <td>11450000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>220.0</td>\n",
       "      <td>300000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>260.0</td>\n",
       "      <td>330000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>220.0</td>\n",
       "      <td>654000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>260.0</td>\n",
       "      <td>500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>260.0</td>\n",
       "      <td>400000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Torque       Price\n",
       "0         0.0  12902800.0\n",
       "1       700.0  15709500.0\n",
       "2       610.0  13890000.0\n",
       "3       610.0  13116000.0\n",
       "4       610.0  11450000.0\n",
       "...       ...         ...\n",
       "22697   220.0    300000.0\n",
       "22698   260.0    330000.0\n",
       "22699   220.0    654000.0\n",
       "22700   260.0    500000.0\n",
       "22701   260.0    400000.0\n",
       "\n",
       "[22702 rows x 2 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[['Torque', 'Price']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1f7e8cd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22660</th>\n",
       "      <td>36623</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>886.0</td>\n",
       "      <td>6.8</td>\n",
       "      <td>4.8</td>\n",
       "      <td>5.5</td>\n",
       "      <td>5.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22661</th>\n",
       "      <td>36624</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>robot</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>886.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22664</th>\n",
       "      <td>36627</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>robot</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>886.0</td>\n",
       "      <td>6.9</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.7</td>\n",
       "      <td>5.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22685</th>\n",
       "      <td>36648</td>\n",
       "      <td>Jaguar</td>\n",
       "      <td>automatic</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>UK</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2004.0</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>810.0</td>\n",
       "      <td>16.3</td>\n",
       "      <td>7.8</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22690</th>\n",
       "      <td>36653</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2296 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "9          9  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "12        12  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "18        18  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "27        27  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "28        28  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22660  36623     Volkswagen   mechanics  front    5.0    5.0  German   \n",
       "22661  36624     Volkswagen       robot  front    5.0    5.0  German   \n",
       "22664  36627     Volkswagen       robot  front    5.0    5.0  German   \n",
       "22685  36648         Jaguar   automatic   rear    4.0    4.0      UK   \n",
       "22690  36653     Volkswagen   mechanics   rear    4.0    2.0  German   \n",
       "\n",
       "         Engine  Volume Color  ...                         Engine_Power  \\\n",
       "9        diesel     2.9  blue  ...                                  NaN   \n",
       "12     gasoline     2.0  blue  ...            direct injection (direct)   \n",
       "18       diesel     2.0  blue  ...                                  NaN   \n",
       "27       diesel     2.0  blue  ...                                  NaN   \n",
       "28       diesel     2.0  blue  ...                                  NaN   \n",
       "...         ...     ...   ...  ...                                  ...   \n",
       "22660    diesel     2.0  blue  ...                                  NaN   \n",
       "22661    diesel     2.0  blue  ...                                  NaN   \n",
       "22664    diesel     2.0  blue  ...                                  NaN   \n",
       "22685  gasoline     3.0  blue  ...  distributed injection (multi-point)   \n",
       "22690  gasoline     1.6  blue  ...                           carburetor   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "9            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "12           1.0        2019.0     2020.0  550.0           1600.0   \n",
       "18           1.0        2019.0     2020.0  550.0           1600.0   \n",
       "27           0.0        2018.0     2020.0  630.0           2055.0   \n",
       "28           0.0        2018.0     2020.0  630.0           2055.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "22660        0.0        2010.0     2015.0  256.0            886.0   \n",
       "22661        0.0        2010.0     2015.0  256.0            886.0   \n",
       "22664        0.0        2010.0     2015.0  256.0            886.0   \n",
       "22685        1.0        2004.0     2008.0  400.0            810.0   \n",
       "22690        0.0        1938.0     2003.0    0.0              0.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "9             11.5           9.2                 9.8           10.35  \n",
       "12             9.3           6.3                 7.4            7.80  \n",
       "18             6.2           5.0                 5.4            5.60  \n",
       "27             7.3           5.9                 6.4            6.60  \n",
       "28             7.3           5.9                 6.4            6.60  \n",
       "...            ...           ...                 ...             ...  \n",
       "22660          6.8           4.8                 5.5            5.80  \n",
       "22661          6.7           5.4                 5.9            6.05  \n",
       "22664          6.9           5.0                 5.7            5.95  \n",
       "22685         16.3           7.8                10.8           12.05  \n",
       "22690          0.0           0.0                 0.0            0.00  \n",
       "\n",
       "[2296 rows x 56 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Color'] == 'blue']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "62d5400b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2296, 56)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Color'] == 'blue'].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1ce62e67",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>34</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>12.6</td>\n",
       "      <td>7.6</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22606</th>\n",
       "      <td>36569</td>\n",
       "      <td>Audi</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>281.0</td>\n",
       "      <td>1011.0</td>\n",
       "      <td>11.8</td>\n",
       "      <td>6.6</td>\n",
       "      <td>8.5</td>\n",
       "      <td>9.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22620</th>\n",
       "      <td>36583</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1999.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22621</th>\n",
       "      <td>36584</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1999.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22661</th>\n",
       "      <td>36624</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>robot</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>2015.0</td>\n",
       "      <td>256.0</td>\n",
       "      <td>886.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22685</th>\n",
       "      <td>36648</td>\n",
       "      <td>Jaguar</td>\n",
       "      <td>automatic</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>UK</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2004.0</td>\n",
       "      <td>2008.0</td>\n",
       "      <td>400.0</td>\n",
       "      <td>810.0</td>\n",
       "      <td>16.3</td>\n",
       "      <td>7.8</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.05</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>900 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "12        12  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "18        18  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "27        27  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "28        28  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "34        34  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22606  36569           Audi       robot   full    4.0    3.0  German   \n",
       "22620  36583            BMW       robot   rear    4.0    2.0  German   \n",
       "22621  36584            BMW       robot   rear    4.0    2.0  German   \n",
       "22661  36624     Volkswagen       robot  front    5.0    5.0  German   \n",
       "22685  36648         Jaguar   automatic   rear    4.0    4.0      UK   \n",
       "\n",
       "         Engine  Volume Color  ...                         Engine_Power  \\\n",
       "12     gasoline     2.0  blue  ...            direct injection (direct)   \n",
       "18       diesel     2.0  blue  ...                                  NaN   \n",
       "27       diesel     2.0  blue  ...                                  NaN   \n",
       "28       diesel     2.0  blue  ...                                  NaN   \n",
       "34     gasoline     3.0  blue  ...            direct injection (direct)   \n",
       "...         ...     ...   ...  ...                                  ...   \n",
       "22606  gasoline     2.0  blue  ...            direct injection (direct)   \n",
       "22620  gasoline     3.3  blue  ...  distributed injection (multi-point)   \n",
       "22621  gasoline     3.3  blue  ...  distributed injection (multi-point)   \n",
       "22661    diesel     2.0  blue  ...                                  NaN   \n",
       "22685  gasoline     3.0  blue  ...  distributed injection (multi-point)   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "12           1.0        2019.0     2020.0  550.0           1600.0   \n",
       "18           1.0        2019.0     2020.0  550.0           1600.0   \n",
       "27           0.0        2018.0     2020.0  630.0           2055.0   \n",
       "28           0.0        2018.0     2020.0  630.0           2055.0   \n",
       "34           0.0        2018.0     2020.0  630.0           2055.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "22606        1.0        2008.0     2012.0  281.0           1011.0   \n",
       "22620        0.0        1999.0     2006.0  300.0              0.0   \n",
       "22621        0.0        1999.0     2006.0  300.0              0.0   \n",
       "22661        0.0        2010.0     2015.0  256.0            886.0   \n",
       "22685        1.0        2004.0     2008.0  400.0            810.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "12             9.3           6.3                 7.4            7.80  \n",
       "18             6.2           5.0                 5.4            5.60  \n",
       "27             7.3           5.9                 6.4            6.60  \n",
       "28             7.3           5.9                 6.4            6.60  \n",
       "34            12.6           7.6                 9.4           10.10  \n",
       "...            ...           ...                 ...             ...  \n",
       "22606         11.8           6.6                 8.5            9.20  \n",
       "22620          0.0           0.0                 0.0            0.00  \n",
       "22621          0.0           0.0                 0.0            0.00  \n",
       "22661          6.7           5.4                 5.9            6.05  \n",
       "22685         16.3           7.8                10.8           12.05  \n",
       "\n",
       "[900 rows x 56 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Color'] == 'blue') & (cars['Maximum_speed'] > 200)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8bf7a636",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(900, 56)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Color'] == 'blue') & (cars['Maximum_speed'] > 200)].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "25f1064f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22657</th>\n",
       "      <td>36620</td>\n",
       "      <td>Lexus</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.8</td>\n",
       "      <td>8.4</td>\n",
       "      <td>11.4</td>\n",
       "      <td>12.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22674</th>\n",
       "      <td>36637</td>\n",
       "      <td>Lexus</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>8.3</td>\n",
       "      <td>11.6</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22675</th>\n",
       "      <td>36638</td>\n",
       "      <td>Lexus</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>8.3</td>\n",
       "      <td>11.6</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22677</th>\n",
       "      <td>36640</td>\n",
       "      <td>Lexus</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>8.3</td>\n",
       "      <td>11.6</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22678</th>\n",
       "      <td>36641</td>\n",
       "      <td>Lexus</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2009.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>510.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>8.3</td>\n",
       "      <td>11.6</td>\n",
       "      <td>12.75</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6123 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0          0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1          1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2          2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3          3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4          4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "...      ...             ...        ...   ...    ...    ...     ...       ...   \n",
       "22657  36620          Lexus   automatic  full    4.0    4.0   Japan  gasoline   \n",
       "22674  36637          Lexus   automatic  full    4.0    4.0   Japan  gasoline   \n",
       "22675  36638          Lexus   automatic  full    4.0    4.0   Japan  gasoline   \n",
       "22677  36640          Lexus   automatic  full    4.0    4.0   Japan  gasoline   \n",
       "22678  36641          Lexus   automatic  full    4.0    4.0   Japan  gasoline   \n",
       "\n",
       "       Volume  Color  ...               Engine_Power  Restyling  Start_series  \\\n",
       "0         2.9  black  ...                        NaN        0.0        2018.0   \n",
       "1         2.9  green  ...                        NaN        0.0        2018.0   \n",
       "2         4.0  black  ...  direct injection (direct)        0.0        2018.0   \n",
       "3         4.0  black  ...  direct injection (direct)        0.0        2018.0   \n",
       "4         4.0   gray  ...  direct injection (direct)        0.0        2018.0   \n",
       "...       ...    ...  ...                        ...        ...           ...   \n",
       "22657     4.6  black  ...  direct injection (direct)        1.0        2012.0   \n",
       "22674     4.6  black  ...  direct injection (direct)        1.0        2009.0   \n",
       "22675     4.6  black  ...  direct injection (direct)        1.0        2009.0   \n",
       "22677     4.6  black  ...  direct injection (direct)        1.0        2009.0   \n",
       "22678     4.6  black  ...  direct injection (direct)        1.0        2009.0   \n",
       "\n",
       "      End_Serial    TVM Trunk_volume_min Expense_city Expense_track  \\\n",
       "0         2020.0  667.0           1941.0         11.5           9.2   \n",
       "1         2020.0  667.0           1941.0         10.8           8.9   \n",
       "2         2020.0  667.0           1941.0         14.1          10.8   \n",
       "3         2020.0  667.0           1941.0         14.1          10.8   \n",
       "4         2020.0  667.0           1941.0         14.1          10.8   \n",
       "...          ...    ...              ...          ...           ...   \n",
       "22657     2017.0  510.0              0.0         16.8           8.4   \n",
       "22674     2012.0  510.0              0.0         17.2           8.3   \n",
       "22675     2012.0  510.0              0.0         17.2           8.3   \n",
       "22677     2012.0  510.0              0.0         17.2           8.3   \n",
       "22678     2012.0  510.0              0.0         17.2           8.3   \n",
       "\n",
       "      Consumption_average Expense_average  \n",
       "0                     9.8           10.35  \n",
       "1                     9.6            9.85  \n",
       "2                    12.1           12.45  \n",
       "3                    12.1           12.45  \n",
       "4                    12.1           12.45  \n",
       "...                   ...             ...  \n",
       "22657                11.4           12.60  \n",
       "22674                11.6           12.75  \n",
       "22675                11.6           12.75  \n",
       "22677                11.6           12.75  \n",
       "22678                11.6           12.75  \n",
       "\n",
       "[6123 rows x 56 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Box'] == 'automatic') & (cars['DU'] == 'full')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4e95c9c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6123, 56)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Box'] == 'automatic') & (cars['DU'] == 'full')].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bca5833c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>2010.0</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>15005 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "0          0  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "1          1  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "2          2  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "3          3  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "4          4  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22697  36660       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22698  36661       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22699  36662       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22700  36663       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22701  36664       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "\n",
       "         Engine  Volume   Color  ...                         Engine_Power  \\\n",
       "0        diesel     2.9   black  ...                                  NaN   \n",
       "1        diesel     2.9   green  ...                                  NaN   \n",
       "2      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "3      gasoline     4.0   black  ...            direct injection (direct)   \n",
       "4      gasoline     4.0    gray  ...            direct injection (direct)   \n",
       "...         ...     ...     ...  ...                                  ...   \n",
       "22697  gasoline     2.4  silver  ...  distributed injection (multi-point)   \n",
       "22698  gasoline     2.7    gray  ...  distributed injection (multi-point)   \n",
       "22699  gasoline     2.4   black  ...  distributed injection (multi-point)   \n",
       "22700  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "22701  gasoline     2.7   black  ...  distributed injection (multi-point)   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "0            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "1            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "2            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "3            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "4            0.0        2018.0     2020.0  667.0           1941.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "22697        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22698        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22699        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22700        0.0        2006.0     2010.0  441.0              0.0   \n",
       "22701        0.0        2006.0     2010.0  441.0              0.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "0             11.5           9.2                 9.8           10.35  \n",
       "1             10.8           8.9                 9.6            9.85  \n",
       "2             14.1          10.8                12.1           12.45  \n",
       "3             14.1          10.8                12.1           12.45  \n",
       "4             14.1          10.8                12.1           12.45  \n",
       "...            ...           ...                 ...             ...  \n",
       "22697         12.3           6.9                 8.9            9.60  \n",
       "22698         12.4           8.7                10.7           10.55  \n",
       "22699         12.3           6.9                 8.9            9.60  \n",
       "22700         12.4           8.7                10.7           10.55  \n",
       "22701         12.4           8.7                10.7           10.55  \n",
       "\n",
       "[15005 rows x 56 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Box'] == 'automatic') | (cars['DU'] == 'full')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "756e7e08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(15005, 56)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Box'] == 'automatic') | (cars['DU'] == 'full')].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "91fb0945",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>65</td>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>591.0</td>\n",
       "      <td>1754.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>67</td>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>591.0</td>\n",
       "      <td>1754.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>68</td>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>591.0</td>\n",
       "      <td>1754.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>69</td>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>brown</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>591.0</td>\n",
       "      <td>1754.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>70</td>\n",
       "      <td>Mitsubishi</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>591.0</td>\n",
       "      <td>1754.0</td>\n",
       "      <td>9.7</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22673</th>\n",
       "      <td>36636</td>\n",
       "      <td>Ford</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1985.0</td>\n",
       "      <td>1994.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22679</th>\n",
       "      <td>36642</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.3</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1993.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22682</th>\n",
       "      <td>36645</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.3</td>\n",
       "      <td>gold</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1984.0</td>\n",
       "      <td>1993.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.1</td>\n",
       "      <td>6.9</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22689</th>\n",
       "      <td>36652</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>yellow</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22690</th>\n",
       "      <td>36653</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7697 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "65        65     Mitsubishi    variator  front    5.0    5.0   Japan   \n",
       "67        67     Mitsubishi    variator  front    5.0    5.0   Japan   \n",
       "68        68     Mitsubishi    variator  front    5.0    5.0   Japan   \n",
       "69        69     Mitsubishi    variator  front    5.0    5.0   Japan   \n",
       "70        70     Mitsubishi    variator  front    5.0    5.0   Japan   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22673  36636           Ford   mechanics   rear    5.0    5.0     USA   \n",
       "22679  36642  Mercedes-Benz   mechanics   rear    4.0    2.0  German   \n",
       "22682  36645  Mercedes-Benz   mechanics   rear    4.0    2.0  German   \n",
       "22689  36652     Volkswagen   mechanics   rear    4.0    2.0  German   \n",
       "22690  36653     Volkswagen   mechanics   rear    4.0    2.0  German   \n",
       "\n",
       "         Engine  Volume   Color  ...                         Engine_Power  \\\n",
       "65     gasoline     2.0   white  ...  distributed injection (multi-point)   \n",
       "67     gasoline     2.0   black  ...  distributed injection (multi-point)   \n",
       "68     gasoline     2.0  silver  ...  distributed injection (multi-point)   \n",
       "69     gasoline     2.0   brown  ...  distributed injection (multi-point)   \n",
       "70     gasoline     2.0  silver  ...  distributed injection (multi-point)   \n",
       "...         ...     ...     ...  ...                                  ...   \n",
       "22673  gasoline     2.0    gray  ...  distributed injection (multi-point)   \n",
       "22679  gasoline     2.3   black  ...  distributed injection (multi-point)   \n",
       "22682  gasoline     2.3    gold  ...  distributed injection (multi-point)   \n",
       "22689  gasoline     1.6  yellow  ...                           carburetor   \n",
       "22690  gasoline     1.6    blue  ...                           carburetor   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "65           1.0        2018.0     2020.0  591.0           1754.0   \n",
       "67           1.0        2018.0     2020.0  591.0           1754.0   \n",
       "68           1.0        2018.0     2020.0  591.0           1754.0   \n",
       "69           1.0        2018.0     2020.0  591.0           1754.0   \n",
       "70           1.0        2018.0     2020.0  591.0           1754.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "22673        0.0        1985.0     1994.0  500.0              0.0   \n",
       "22679        0.0        1984.0     1993.0  480.0              0.0   \n",
       "22682        0.0        1984.0     1993.0  480.0              0.0   \n",
       "22689        0.0        1938.0     2003.0    0.0              0.0   \n",
       "22690        0.0        1938.0     2003.0    0.0              0.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "65             9.7           6.2                 7.5            7.95  \n",
       "67             9.7           6.2                 7.5            7.95  \n",
       "68             9.7           6.2                 7.5            7.95  \n",
       "69             9.7           6.2                 7.5            7.95  \n",
       "70             9.7           6.2                 7.5            7.95  \n",
       "...            ...           ...                 ...             ...  \n",
       "22673          0.0           0.0                 0.0            0.00  \n",
       "22679          0.0           0.0                 0.0            0.00  \n",
       "22682         12.1           6.9                 9.2            9.50  \n",
       "22689          0.0           0.0                 0.0            0.00  \n",
       "22690          0.0           0.0                 0.0            0.00  \n",
       "\n",
       "[7697 rows x 56 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[~((cars['Box'] == 'automatic') | (cars['DU'] == 'full'))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f33cb60c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7697, 56)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[~((cars['Box'] == 'automatic') | (cars['DU'] == 'full'))].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "51791cf1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>27</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>28</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>630.0</td>\n",
       "      <td>2055.0</td>\n",
       "      <td>7.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21629</th>\n",
       "      <td>34889</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21630</th>\n",
       "      <td>34890</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21631</th>\n",
       "      <td>34891</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>light Blue</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>8.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22123</th>\n",
       "      <td>35748</td>\n",
       "      <td>BMW</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22215</th>\n",
       "      <td>35856</td>\n",
       "      <td>BMW</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.8</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.90</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>522 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "16        16  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "17        17  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "25        25  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "27        27  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "28        28  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "...      ...             ...        ...   ...    ...    ...     ...       ...   \n",
       "21629  34889            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "21630  34890            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "21631  34891            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "22123  35748            BMW   automatic  full    4.0    2.0  German  gasoline   \n",
       "22215  35856            BMW   automatic  full    4.0    2.0  German  gasoline   \n",
       "\n",
       "       Volume       Color  ...               Engine_Power  Restyling  \\\n",
       "16        2.0        gray  ...                        NaN        1.0   \n",
       "17        2.0       black  ...  direct injection (direct)        1.0   \n",
       "25        2.0       black  ...  direct injection (direct)        1.0   \n",
       "27        2.0        blue  ...                        NaN        0.0   \n",
       "28        2.0        blue  ...                        NaN        0.0   \n",
       "...       ...         ...  ...                        ...        ...   \n",
       "21629     3.0       black  ...  direct injection (direct)        1.0   \n",
       "21630     3.0        blue  ...  direct injection (direct)        1.0   \n",
       "21631     3.0  light Blue  ...  direct injection (direct)        1.0   \n",
       "22123     3.0       black  ...  direct injection (direct)        1.0   \n",
       "22215     3.0       black  ...  direct injection (direct)        1.0   \n",
       "\n",
       "       Start_series End_Serial    TVM Trunk_volume_min Expense_city  \\\n",
       "16           2019.0     2020.0  550.0           1600.0          7.0   \n",
       "17           2019.0     2020.0  550.0           1600.0          9.3   \n",
       "25           2019.0     2020.0  550.0           1600.0          9.3   \n",
       "27           2018.0     2020.0  630.0           2055.0          7.3   \n",
       "28           2018.0     2020.0  630.0           2055.0          7.3   \n",
       "...             ...        ...    ...              ...          ...   \n",
       "21629        2017.0     2020.0    0.0              0.0         11.1   \n",
       "21630        2017.0     2020.0    0.0              0.0         11.1   \n",
       "21631        2017.0     2020.0    0.0              0.0         11.1   \n",
       "22123        2017.0     2020.0  390.0              0.0          9.8   \n",
       "22215        2017.0     2020.0  390.0              0.0          9.8   \n",
       "\n",
       "      Expense_track Consumption_average Expense_average  \n",
       "16              5.3                 5.9            6.15  \n",
       "17              6.3                 7.4            7.80  \n",
       "25              6.3                 7.4            7.80  \n",
       "27              5.9                 6.4            6.60  \n",
       "28              5.9                 6.4            6.60  \n",
       "...             ...                 ...             ...  \n",
       "21629           6.7                 8.3            8.90  \n",
       "21630           6.7                 8.3            8.90  \n",
       "21631           6.7                 8.3            8.90  \n",
       "22123           6.0                 7.4            7.90  \n",
       "22215           6.0                 7.4            7.90  \n",
       "\n",
       "[522 rows x 56 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['MP'] > 225) \n",
    "          & (cars['Start_series'] > 2016) \n",
    "          & (cars['Price'] < 7000000)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "0b2b3ade",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(522, 56)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['MP'] > 225) \n",
    "          & (cars['Start_series'] > 2016) \n",
    "          & (cars['Price'] < 7000000)].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3249f4bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>16</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.3</td>\n",
       "      <td>5.9</td>\n",
       "      <td>6.15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>18</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.4</td>\n",
       "      <td>5.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>25</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>550.0</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>9.3</td>\n",
       "      <td>6.3</td>\n",
       "      <td>7.4</td>\n",
       "      <td>7.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20532</th>\n",
       "      <td>32804</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20533</th>\n",
       "      <td>32805</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20534</th>\n",
       "      <td>32806</td>\n",
       "      <td>BMW</td>\n",
       "      <td>robot</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22300</th>\n",
       "      <td>35954</td>\n",
       "      <td>BMW</td>\n",
       "      <td>automatic</td>\n",
       "      <td>rear</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>6.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2001.0</td>\n",
       "      <td>2005.0</td>\n",
       "      <td>500.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.5</td>\n",
       "      <td>9.7</td>\n",
       "      <td>13.6</td>\n",
       "      <td>15.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22580</th>\n",
       "      <td>36543</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>rear</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012.0</td>\n",
       "      <td>2016.0</td>\n",
       "      <td>364.0</td>\n",
       "      <td>504.0</td>\n",
       "      <td>10.2</td>\n",
       "      <td>6.2</td>\n",
       "      <td>7.7</td>\n",
       "      <td>8.20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>236 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "16        16  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "17        17  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "18        18  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "19        19  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "25        25  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "...      ...             ...        ...   ...    ...    ...     ...       ...   \n",
       "20532  32804            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "20533  32805            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "20534  32806            BMW       robot  rear    4.0    2.0  German  gasoline   \n",
       "22300  35954            BMW   automatic  rear    5.0    4.0  German  gasoline   \n",
       "22580  36543  Mercedes-Benz   automatic  rear    2.0    2.0  German  gasoline   \n",
       "\n",
       "       Volume  Color  ...               Engine_Power  Restyling  Start_series  \\\n",
       "16        2.0   gray  ...                        NaN        1.0        2019.0   \n",
       "17        2.0  black  ...  direct injection (direct)        1.0        2019.0   \n",
       "18        2.0   blue  ...                        NaN        1.0        2019.0   \n",
       "19        2.0  black  ...                        NaN        1.0        2019.0   \n",
       "25        2.0  black  ...  direct injection (direct)        1.0        2019.0   \n",
       "...       ...    ...  ...                        ...        ...           ...   \n",
       "20532     3.0  black  ...  direct injection (direct)        1.0        2018.0   \n",
       "20533     3.0  white  ...  direct injection (direct)        1.0        2018.0   \n",
       "20534     3.0  black  ...  direct injection (direct)        1.0        2018.0   \n",
       "22300     6.0  black  ...  direct injection (direct)        0.0        2001.0   \n",
       "22580     3.0  white  ...  direct injection (direct)        0.0        2012.0   \n",
       "\n",
       "      End_Serial    TVM Trunk_volume_min Expense_city Expense_track  \\\n",
       "16        2020.0  550.0           1600.0          7.0           5.3   \n",
       "17        2020.0  550.0           1600.0          9.3           6.3   \n",
       "18        2020.0  550.0           1600.0          6.2           5.0   \n",
       "19        2020.0  550.0           1600.0          6.2           5.0   \n",
       "25        2020.0  550.0           1600.0          9.3           6.3   \n",
       "...          ...    ...              ...          ...           ...   \n",
       "20532     2020.0  390.0              0.0          0.0           0.0   \n",
       "20533     2020.0  390.0              0.0          0.0           0.0   \n",
       "20534     2020.0  390.0              0.0          0.0           0.0   \n",
       "22300     2005.0  500.0              0.0         20.5           9.7   \n",
       "22580     2016.0  364.0            504.0         10.2           6.2   \n",
       "\n",
       "      Consumption_average Expense_average  \n",
       "16                    5.9            6.15  \n",
       "17                    7.4            7.80  \n",
       "18                    5.4            5.60  \n",
       "19                    5.4            5.60  \n",
       "25                    7.4            7.80  \n",
       "...                   ...             ...  \n",
       "20532                 0.0            0.00  \n",
       "20533                 0.0            0.00  \n",
       "20534                 0.0            0.00  \n",
       "22300                13.6           15.10  \n",
       "22580                 7.7            8.20  \n",
       "\n",
       "[236 rows x 56 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Country'] == \"German\") \n",
    "        & (cars['Price'].isin(range(4000000, 5000000)))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7c2d6173",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(236, 56)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[(cars['Country'] == \"German\") \n",
    "        & (cars['Price'].isin(range(4000000, 5000000)))].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c0f1d73d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7374     2020.0\n",
       "382      2020.0\n",
       "979      2020.0\n",
       "978      2020.0\n",
       "977      2020.0\n",
       "          ...  \n",
       "7950     1943.0\n",
       "22690    1938.0\n",
       "22689    1938.0\n",
       "22382    1927.0\n",
       "22383    1927.0\n",
       "Name: Start_series, Length: 22702, dtype: float64"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Start_series'].sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3c72e8ae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7374</th>\n",
       "      <td>12296</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>530.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.7</td>\n",
       "      <td>5.4</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>382</th>\n",
       "      <td>382</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>robot</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>435.0</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>9.2</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.1</td>\n",
       "      <td>7.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>979</th>\n",
       "      <td>1295</td>\n",
       "      <td>Hyundai</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.9</td>\n",
       "      <td>5.3</td>\n",
       "      <td>6.6</td>\n",
       "      <td>7.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>978</th>\n",
       "      <td>1294</td>\n",
       "      <td>Hyundai</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>6.3</td>\n",
       "      <td>6.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>977</th>\n",
       "      <td>1293</td>\n",
       "      <td>Hyundai</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>South Korea</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>480.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.5</td>\n",
       "      <td>5.1</td>\n",
       "      <td>6.3</td>\n",
       "      <td>6.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7950</th>\n",
       "      <td>13228</td>\n",
       "      <td>GAZ</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Russia</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1943.0</td>\n",
       "      <td>1953.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22690</th>\n",
       "      <td>36653</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22689</th>\n",
       "      <td>36652</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>yellow</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22382</th>\n",
       "      <td>36036</td>\n",
       "      <td>Ford</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1927.0</td>\n",
       "      <td>1931.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22383</th>\n",
       "      <td>36037</td>\n",
       "      <td>Ford</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>beige</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1927.0</td>\n",
       "      <td>1931.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors      Country  \\\n",
       "7374   12296     Volkswagen   automatic  front    5.0    5.0       German   \n",
       "382      382  Mercedes-Benz       robot   full    5.0    5.0       German   \n",
       "979     1295        Hyundai   automatic  front    5.0    4.0  South Korea   \n",
       "978     1294        Hyundai   mechanics  front    5.0    4.0  South Korea   \n",
       "977     1293        Hyundai   mechanics  front    5.0    4.0  South Korea   \n",
       "...      ...             ...        ...    ...    ...    ...          ...   \n",
       "7950   13228            GAZ   mechanics   full    5.0    3.0       Russia   \n",
       "22690  36653     Volkswagen   mechanics   rear    4.0    2.0       German   \n",
       "22689  36652     Volkswagen   mechanics   rear    4.0    2.0       German   \n",
       "22382  36036           Ford   mechanics   rear    4.0    3.0          USA   \n",
       "22383  36037           Ford   mechanics   rear    4.0    3.0          USA   \n",
       "\n",
       "         Engine  Volume   Color  ...                         Engine_Power  \\\n",
       "7374   gasoline     1.6  silver  ...  distributed injection (multi-point)   \n",
       "382    gasoline     2.0   black  ...            direct injection (direct)   \n",
       "979    gasoline     1.6   white  ...  distributed injection (multi-point)   \n",
       "978    gasoline     1.6   white  ...  distributed injection (multi-point)   \n",
       "977    gasoline     1.6   black  ...  distributed injection (multi-point)   \n",
       "...         ...     ...     ...  ...                                  ...   \n",
       "7950   gasoline     3.3   green  ...                           carburetor   \n",
       "22690  gasoline     1.6    blue  ...                           carburetor   \n",
       "22689  gasoline     1.6  yellow  ...                           carburetor   \n",
       "22382  gasoline     3.3    blue  ...                                  NaN   \n",
       "22383  gasoline     3.3   beige  ...                                  NaN   \n",
       "\n",
       "       Restyling  Start_series End_Serial    TVM Trunk_volume_min  \\\n",
       "7374         0.0        2020.0     2020.0  530.0              0.0   \n",
       "382          0.0        2020.0     2020.0  435.0           1430.0   \n",
       "979          1.0        2020.0     2020.0  480.0              0.0   \n",
       "978          1.0        2020.0     2020.0  480.0              0.0   \n",
       "977          1.0        2020.0     2020.0  480.0              0.0   \n",
       "...          ...           ...        ...    ...              ...   \n",
       "7950         0.0        1943.0     1953.0    0.0              0.0   \n",
       "22690        0.0        1938.0     2003.0    0.0              0.0   \n",
       "22689        0.0        1938.0     2003.0    0.0              0.0   \n",
       "22382        0.0        1927.0     1931.0    0.0              0.0   \n",
       "22383        0.0        1927.0     1931.0    0.0              0.0   \n",
       "\n",
       "      Expense_city Expense_track Consumption_average Expense_average  \n",
       "7374           8.7           5.4                 6.6            7.05  \n",
       "382            9.2           6.0                 7.1            7.60  \n",
       "979            8.9           5.3                 6.6            7.10  \n",
       "978            8.5           5.1                 6.3            6.80  \n",
       "977            8.5           5.1                 6.3            6.80  \n",
       "...            ...           ...                 ...             ...  \n",
       "7950           0.0           0.0                 0.0            0.00  \n",
       "22690          0.0           0.0                 0.0            0.00  \n",
       "22689          0.0           0.0                 0.0            0.00  \n",
       "22382          0.0           0.0                 0.0            0.00  \n",
       "22383          0.0           0.0                 0.0            0.00  \n",
       "\n",
       "[22702 rows x 56 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.sort_values(by=['Start_series'], ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a7715ac8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Restyling</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1132</th>\n",
       "      <td>1448</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>355.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>15.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.9</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1130</th>\n",
       "      <td>1446</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>355.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>15.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.9</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1133</th>\n",
       "      <td>1449</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>355.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>15.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.9</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1128</th>\n",
       "      <td>1444</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>355.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>15.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.9</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1131</th>\n",
       "      <td>1447</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>355.0</td>\n",
       "      <td>2400.0</td>\n",
       "      <td>15.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>11.9</td>\n",
       "      <td>12.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12808</th>\n",
       "      <td>20405</td>\n",
       "      <td>GAZ</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Russia</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1943.0</td>\n",
       "      <td>1953.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22689</th>\n",
       "      <td>36652</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>yellow</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22690</th>\n",
       "      <td>36653</td>\n",
       "      <td>Volkswagen</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>carburetor</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1938.0</td>\n",
       "      <td>2003.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22382</th>\n",
       "      <td>36036</td>\n",
       "      <td>Ford</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1927.0</td>\n",
       "      <td>1931.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22383</th>\n",
       "      <td>36037</td>\n",
       "      <td>Ford</td>\n",
       "      <td>mechanics</td>\n",
       "      <td>rear</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>3.3</td>\n",
       "      <td>beige</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1927.0</td>\n",
       "      <td>1931.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "1132    1448  Mercedes-Benz   automatic  full    6.0    5.0  German  gasoline   \n",
       "1130    1446  Mercedes-Benz   automatic  full    6.0    5.0  German  gasoline   \n",
       "1133    1449  Mercedes-Benz   automatic  full    6.0    5.0  German  gasoline   \n",
       "1128    1444  Mercedes-Benz   automatic  full    6.0    5.0  German  gasoline   \n",
       "1131    1447  Mercedes-Benz   automatic  full    6.0    5.0  German  gasoline   \n",
       "...      ...             ...        ...   ...    ...    ...     ...       ...   \n",
       "12808  20405            GAZ   mechanics  full    5.0    3.0  Russia  gasoline   \n",
       "22689  36652     Volkswagen   mechanics  rear    4.0    2.0  German  gasoline   \n",
       "22690  36653     Volkswagen   mechanics  rear    4.0    2.0  German  gasoline   \n",
       "22382  36036           Ford   mechanics  rear    4.0    3.0     USA  gasoline   \n",
       "22383  36037           Ford   mechanics  rear    4.0    3.0     USA  gasoline   \n",
       "\n",
       "       Volume   Color  ...               Engine_Power  Restyling  \\\n",
       "1132      4.0   black  ...  direct injection (direct)        0.0   \n",
       "1130      4.0   white  ...  direct injection (direct)        0.0   \n",
       "1133      4.0   black  ...  direct injection (direct)        0.0   \n",
       "1128      4.0   black  ...  direct injection (direct)        0.0   \n",
       "1131      4.0   white  ...  direct injection (direct)        0.0   \n",
       "...       ...     ...  ...                        ...        ...   \n",
       "12808     3.3   green  ...                 carburetor        0.0   \n",
       "22689     1.6  yellow  ...                 carburetor        0.0   \n",
       "22690     1.6    blue  ...                 carburetor        0.0   \n",
       "22382     3.3    blue  ...                        NaN        0.0   \n",
       "22383     3.3   beige  ...                        NaN        0.0   \n",
       "\n",
       "       Start_series End_Serial    TVM Trunk_volume_min Expense_city  \\\n",
       "1132         2020.0     2020.0  355.0           2400.0         15.4   \n",
       "1130         2020.0     2020.0  355.0           2400.0         15.4   \n",
       "1133         2020.0     2020.0  355.0           2400.0         15.4   \n",
       "1128         2020.0     2020.0  355.0           2400.0         15.4   \n",
       "1131         2020.0     2020.0  355.0           2400.0         15.4   \n",
       "...             ...        ...    ...              ...          ...   \n",
       "12808        1943.0     1953.0    0.0              0.0          0.0   \n",
       "22689        1938.0     2003.0    0.0              0.0          0.0   \n",
       "22690        1938.0     2003.0    0.0              0.0          0.0   \n",
       "22382        1927.0     1931.0    0.0              0.0          0.0   \n",
       "22383        1927.0     1931.0    0.0              0.0          0.0   \n",
       "\n",
       "      Expense_track Consumption_average Expense_average  \n",
       "1132           10.0                11.9            12.7  \n",
       "1130           10.0                11.9            12.7  \n",
       "1133           10.0                11.9            12.7  \n",
       "1128           10.0                11.9            12.7  \n",
       "1131           10.0                11.9            12.7  \n",
       "...             ...                 ...             ...  \n",
       "12808           0.0                 0.0             0.0  \n",
       "22689           0.0                 0.0             0.0  \n",
       "22690           0.0                 0.0             0.0  \n",
       "22382           0.0                 0.0             0.0  \n",
       "22383           0.0                 0.0             0.0  \n",
       "\n",
       "[22702 rows x 56 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.sort_values(by=['Start_series', 'Price'], ascending=[False, False])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "6995e29d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Consumption</th>\n",
       "      <th>Engine_Power</th>\n",
       "      <th>Start_series</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>9.6</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>12.1</td>\n",
       "      <td>direct injection (direct)</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 55 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2   2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3   3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4   4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "\n",
       "   Volume  Color  ...  Consumption               Engine_Power  Start_series  \\\n",
       "0     2.9  black  ...          9.8                        NaN        2018.0   \n",
       "1     2.9  green  ...          9.6                        NaN        2018.0   \n",
       "2     4.0  black  ...         12.1  direct injection (direct)        2018.0   \n",
       "3     4.0  black  ...         12.1  direct injection (direct)        2018.0   \n",
       "4     4.0   gray  ...         12.1  direct injection (direct)        2018.0   \n",
       "\n",
       "  End_Serial    TVM Trunk_volume_min Expense_city Expense_track  \\\n",
       "0     2020.0  667.0           1941.0         11.5           9.2   \n",
       "1     2020.0  667.0           1941.0         10.8           8.9   \n",
       "2     2020.0  667.0           1941.0         14.1          10.8   \n",
       "3     2020.0  667.0           1941.0         14.1          10.8   \n",
       "4     2020.0  667.0           1941.0         14.1          10.8   \n",
       "\n",
       "  Consumption_average Expense_average  \n",
       "0                 9.8           10.35  \n",
       "1                 9.6            9.85  \n",
       "2                12.1           12.45  \n",
       "3                12.1           12.45  \n",
       "4                12.1           12.45  \n",
       "\n",
       "[5 rows x 55 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "del cars['Restyling']\n",
    "cars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "0af57e60",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'mk', 'Box', 'DU', 'Seats', 'Doors', 'Country', 'Engine',\n",
       "       'Volume', 'Color', 'Mileage', 'Price', 'Year', 'Car_type', 'Gen',\n",
       "       'Model', 'Drive', 'Boost_type', 'Cylinder', 'Front_brakes',\n",
       "       'Engine_volume', 'Width', 'Susp_t', 'Diameter_cyl', 'MP', 'Length',\n",
       "       'Car_class', 'Wheelbase', 'Cylinders', 'Height', 'Fuel', 'Torque',\n",
       "       'VPC', 'Tank_volume', 'Rear_track_width', 'Front_track_width',\n",
       "       'Curb_weight_kg', 'Clearance', 'Engine_Location', 'Maximum_speed',\n",
       "       'Wheel_size', 'Transmissions', 'Speed_to_100', 'Full_weight',\n",
       "       'Compression_ratio', 'Consumption', 'Engine_Power', 'Start_series',\n",
       "       'End_Serial', 'TVM', 'Trunk_volume_min', 'Expense_city',\n",
       "       'Expense_track', 'Consumption_average', 'Expense_average'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "6008d4c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1026"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].apply(lambda x: 1 if x >= 5000000 else 0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "0beefed8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "8754"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].apply(lambda x: 1 if x >= 800000 and x < 5000000 else 0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "562cd5e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12922"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].apply(lambda x: 1 if x < 800000 else 0).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a07b8c6f",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['h_Price'] = cars['Price'].apply(lambda x: 1 if x >= 5000000 else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "b7fdeea9",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['m_Price'] = cars['Price'].apply(lambda x: 1 if x >= 800000 and x < 5000000 else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "eda76cff",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['l_Price'] = cars['Price'].apply(lambda x: 1 if x < 800000 else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "10fda346",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>End_Serial</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 58 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2   2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3   3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4   4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "\n",
       "   Volume  Color  ...  End_Serial    TVM  Trunk_volume_min Expense_city  \\\n",
       "0     2.9  black  ...      2020.0  667.0            1941.0         11.5   \n",
       "1     2.9  green  ...      2020.0  667.0            1941.0         10.8   \n",
       "2     4.0  black  ...      2020.0  667.0            1941.0         14.1   \n",
       "3     4.0  black  ...      2020.0  667.0            1941.0         14.1   \n",
       "4     4.0   gray  ...      2020.0  667.0            1941.0         14.1   \n",
       "\n",
       "  Expense_track Consumption_average Expense_average h_Price m_Price l_Price  \n",
       "0           9.2                 9.8           10.35       1       0       0  \n",
       "1           8.9                 9.6            9.85       1       0       0  \n",
       "2          10.8                12.1           12.45       1       0       0  \n",
       "3          10.8                12.1           12.45       1       0       0  \n",
       "4          10.8                12.1           12.45       1       0       0  \n",
       "\n",
       "[5 rows x 58 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "2ab6ee0c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12902800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15709500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13890000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13116000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11450000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22697</th>\n",
       "      <td>36660</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>silver</td>\n",
       "      <td>...</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>300000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22698</th>\n",
       "      <td>36661</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>330000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22699</th>\n",
       "      <td>36662</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.4</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.3</td>\n",
       "      <td>6.9</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>654000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22700</th>\n",
       "      <td>36663</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22701</th>\n",
       "      <td>36664</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>USA</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>2.7</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>441.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.4</td>\n",
       "      <td>8.7</td>\n",
       "      <td>10.7</td>\n",
       "      <td>10.55</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>400000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>22702 rows × 59 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "0          0  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "1          1  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "2          2  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "3          3  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "4          4  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22697  36660       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22698  36661       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22699  36662       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22700  36663       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "22701  36664       Chrysler   automatic  front    5.0    4.0     USA   \n",
       "\n",
       "         Engine  Volume   Color  ...    TVM  Trunk_volume_min  Expense_city  \\\n",
       "0        diesel     2.9   black  ...  667.0            1941.0          11.5   \n",
       "1        diesel     2.9   green  ...  667.0            1941.0          10.8   \n",
       "2      gasoline     4.0   black  ...  667.0            1941.0          14.1   \n",
       "3      gasoline     4.0   black  ...  667.0            1941.0          14.1   \n",
       "4      gasoline     4.0    gray  ...  667.0            1941.0          14.1   \n",
       "...         ...     ...     ...  ...    ...               ...           ...   \n",
       "22697  gasoline     2.4  silver  ...  441.0               0.0          12.3   \n",
       "22698  gasoline     2.7    gray  ...  441.0               0.0          12.4   \n",
       "22699  gasoline     2.4   black  ...  441.0               0.0          12.3   \n",
       "22700  gasoline     2.7   black  ...  441.0               0.0          12.4   \n",
       "22701  gasoline     2.7   black  ...  441.0               0.0          12.4   \n",
       "\n",
       "      Expense_track Consumption_average Expense_average h_Price m_Price  \\\n",
       "0               9.2                 9.8           10.35       1       0   \n",
       "1               8.9                 9.6            9.85       1       0   \n",
       "2              10.8                12.1           12.45       1       0   \n",
       "3              10.8                12.1           12.45       1       0   \n",
       "4              10.8                12.1           12.45       1       0   \n",
       "...             ...                 ...             ...     ...     ...   \n",
       "22697           6.9                 8.9            9.60       0       0   \n",
       "22698           8.7                10.7           10.55       0       0   \n",
       "22699           6.9                 8.9            9.60       0       0   \n",
       "22700           8.7                10.7           10.55       0       0   \n",
       "22701           8.7                10.7           10.55       0       0   \n",
       "\n",
       "      l_Price    Pricecat  \n",
       "0           0  12902800.0  \n",
       "1           0  15709500.0  \n",
       "2           0  13890000.0  \n",
       "3           0  13116000.0  \n",
       "4           0  11450000.0  \n",
       "...       ...         ...  \n",
       "22697       1    300000.0  \n",
       "22698       1    330000.0  \n",
       "22699       1    654000.0  \n",
       "22700       1    500000.0  \n",
       "22701       1    400000.0  \n",
       "\n",
       "[22702 rows x 59 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'] = cars['Price']\n",
    "cars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "47b40679",
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_price_cat(Price):\n",
    "    if Price >= 5000000:\n",
    "        return 'high'\n",
    "    elif Price >= 800000 and Price < 5000000:\n",
    "        return 'medium'\n",
    "    elif Price < 800000:\n",
    "        return 'low'\n",
    "    else:\n",
    "        return Price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "42a73fce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        high\n",
       "1        high\n",
       "2        high\n",
       "3        high\n",
       "4        high\n",
       "         ... \n",
       "22697     low\n",
       "22698     low\n",
       "22699     low\n",
       "22700     low\n",
       "22701     low\n",
       "Name: Pricecat, Length: 22702, dtype: object"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'].apply(get_price_cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "2d8eb8f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>TVM</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>667.0</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 59 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2   2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3   3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4   4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "\n",
       "   Volume  Color  ...    TVM  Trunk_volume_min  Expense_city Expense_track  \\\n",
       "0     2.9  black  ...  667.0            1941.0          11.5           9.2   \n",
       "1     2.9  green  ...  667.0            1941.0          10.8           8.9   \n",
       "2     4.0  black  ...  667.0            1941.0          14.1          10.8   \n",
       "3     4.0  black  ...  667.0            1941.0          14.1          10.8   \n",
       "4     4.0   gray  ...  667.0            1941.0          14.1          10.8   \n",
       "\n",
       "  Consumption_average Expense_average h_Price m_Price l_Price Pricecat  \n",
       "0                 9.8           10.35       1       0       0     high  \n",
       "1                 9.6            9.85       1       0       0     high  \n",
       "2                12.1           12.45       1       0       0     high  \n",
       "3                12.1           12.45       1       0       0     high  \n",
       "4                12.1           12.45       1       0       0     high  \n",
       "\n",
       "[5 rows x 59 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'] = cars['Pricecat'].apply(get_price_cat)\n",
    "cars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "4ec49e6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['Pricecat'] = pd.Categorical(cars['Pricecat'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "28216e8e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 22702 entries, 0 to 22701\n",
      "Data columns (total 59 columns):\n",
      " #   Column               Non-Null Count  Dtype   \n",
      "---  ------               --------------  -----   \n",
      " 0   id                   22702 non-null  int64   \n",
      " 1   mk                   22702 non-null  object  \n",
      " 2   Box                  22702 non-null  object  \n",
      " 3   DU                   22702 non-null  object  \n",
      " 4   Seats                22702 non-null  float64 \n",
      " 5   Doors                22702 non-null  float64 \n",
      " 6   Country              22702 non-null  object  \n",
      " 7   Engine               22702 non-null  object  \n",
      " 8   Volume               22702 non-null  float64 \n",
      " 9   Color                22702 non-null  object  \n",
      " 10  Mileage              22702 non-null  float64 \n",
      " 11  Price                22702 non-null  float64 \n",
      " 12  Year                 22702 non-null  float64 \n",
      " 13  Car_type             22702 non-null  object  \n",
      " 14  Gen                  22702 non-null  object  \n",
      " 15  Model                22702 non-null  object  \n",
      " 16  Drive                22511 non-null  object  \n",
      " 17  Boost_type           22419 non-null  object  \n",
      " 18  Cylinder             22455 non-null  object  \n",
      " 19  Front_brakes         22511 non-null  object  \n",
      " 20  Engine_volume        22702 non-null  float64 \n",
      " 21  Width                22702 non-null  float64 \n",
      " 22  Susp_t               22511 non-null  object  \n",
      " 23  Diameter_cyl         22702 non-null  float64 \n",
      " 24  MP                   22702 non-null  float64 \n",
      " 25  Length               22702 non-null  float64 \n",
      " 26  Car_class            22481 non-null  object  \n",
      " 27  Wheelbase            22702 non-null  float64 \n",
      " 28  Cylinders            22702 non-null  float64 \n",
      " 29  Height               22702 non-null  float64 \n",
      " 30  Fuel                 22283 non-null  object  \n",
      " 31  Torque               22702 non-null  float64 \n",
      " 32  VPC                  22702 non-null  float64 \n",
      " 33  Tank_volume          22702 non-null  float64 \n",
      " 34  Rear_track_width     22702 non-null  float64 \n",
      " 35  Front_track_width    22702 non-null  float64 \n",
      " 36  Curb_weight_kg       22702 non-null  float64 \n",
      " 37  Clearance            22702 non-null  float64 \n",
      " 38  Engine_Location      21345 non-null  object  \n",
      " 39  Maximum_speed        22702 non-null  float64 \n",
      " 40  Wheel_size           21162 non-null  object  \n",
      " 41  Transmissions        22702 non-null  float64 \n",
      " 42  Speed_to_100         22702 non-null  float64 \n",
      " 43  Full_weight          22702 non-null  float64 \n",
      " 44  Compression_ratio    22702 non-null  float64 \n",
      " 45  Consumption          22702 non-null  float64 \n",
      " 46  Engine_Power         19140 non-null  object  \n",
      " 47  Start_series         22702 non-null  float64 \n",
      " 48  End_Serial           22702 non-null  float64 \n",
      " 49  TVM                  22702 non-null  float64 \n",
      " 50  Trunk_volume_min     22702 non-null  float64 \n",
      " 51  Expense_city         22702 non-null  float64 \n",
      " 52  Expense_track        22702 non-null  float64 \n",
      " 53  Consumption_average  22702 non-null  float64 \n",
      " 54  Expense_average      22702 non-null  float64 \n",
      " 55  h_Price              22702 non-null  int64   \n",
      " 56  m_Price              22702 non-null  int64   \n",
      " 57  l_Price              22702 non-null  int64   \n",
      " 58  Pricecat             22702 non-null  category\n",
      "dtypes: category(1), float64(35), int64(4), object(19)\n",
      "memory usage: 10.1+ MB\n"
     ]
    }
   ],
   "source": [
    "cars.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "d66c90d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        high\n",
       "1        high\n",
       "2        high\n",
       "3        high\n",
       "4        high\n",
       "         ... \n",
       "22697     low\n",
       "22698     low\n",
       "22699     low\n",
       "22700     low\n",
       "22701     low\n",
       "Name: Pricecat, Length: 22702, dtype: category\n",
       "Categories (3, object): ['high', 'low', 'medium']"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "8760d40b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        0\n",
       "1        0\n",
       "2        0\n",
       "3        0\n",
       "4        0\n",
       "        ..\n",
       "22697    1\n",
       "22698    1\n",
       "22699    1\n",
       "22700    1\n",
       "22701    1\n",
       "Length: 22702, dtype: int8"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'].cat.codes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "20347d3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['high', 'low', 'medium'], dtype='object')"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'].cat.categories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "ffeffc00",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['fullrobot'] = np.where((cars['DU'] == 'full' )&\n",
    "         (cars['Box'] == 'robot'), 1, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9b135dd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Trunk_volume_min</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>fullrobot</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>10.8</td>\n",
       "      <td>8.9</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>4.0</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>1941.0</td>\n",
       "      <td>14.1</td>\n",
       "      <td>10.8</td>\n",
       "      <td>12.1</td>\n",
       "      <td>12.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 60 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country    Engine  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German    diesel   \n",
       "2   2  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "3   3  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "4   4  Mercedes-Benz   automatic  full    5.0    5.0  German  gasoline   \n",
       "\n",
       "   Volume  Color  ...  Trunk_volume_min  Expense_city  Expense_track  \\\n",
       "0     2.9  black  ...            1941.0          11.5            9.2   \n",
       "1     2.9  green  ...            1941.0          10.8            8.9   \n",
       "2     4.0  black  ...            1941.0          14.1           10.8   \n",
       "3     4.0  black  ...            1941.0          14.1           10.8   \n",
       "4     4.0   gray  ...            1941.0          14.1           10.8   \n",
       "\n",
       "  Consumption_average Expense_average h_Price m_Price l_Price Pricecat  \\\n",
       "0                 9.8           10.35       1       0       0     high   \n",
       "1                 9.6            9.85       1       0       0     high   \n",
       "2                12.1           12.45       1       0       0     high   \n",
       "3                12.1           12.45       1       0       0     high   \n",
       "4                12.1           12.45       1       0       0     high   \n",
       "\n",
       "  fullrobot  \n",
       "0         0  \n",
       "1         0  \n",
       "2         0  \n",
       "3         0  \n",
       "4         0  \n",
       "\n",
       "[5 rows x 60 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "fb79fd32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "580"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['fullrobot'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "f0597792",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "low       12922\n",
       "medium     8754\n",
       "high       1026\n",
       "Name: Pricecat, dtype: int64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Pricecat'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "3a0d25d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "automatic    12365\n",
       "mechanics     6981\n",
       "robot         1984\n",
       "variator      1372\n",
       "Name: Box, dtype: int64"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Box'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "61f502f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat\n",
       "high       76\n",
       "low        28\n",
       "medium    476\n",
       "Name: fullrobot, dtype: int64"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Pricecat')['fullrobot'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "fe41b84d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat  fullrobot\n",
       "high      0              950\n",
       "          1               76\n",
       "low       0            12894\n",
       "          1               28\n",
       "medium    0             8278\n",
       "          1              476\n",
       "Name: fullrobot, dtype: int64"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Pricecat')['fullrobot'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "0b0d8dc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYQAAAD4CAYAAADsKpHdAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAATp0lEQVR4nO3dcZCc9X3f8fenUgOKHGww4UYj0YqMNXUFOE25UNI4nsvgCVfbYzGNqeWSIBomail1nA6eVKQzdSatZvCkLgmewEQ1RCJhwCq1R5pQElO5G5wEg4VNEQJUVETgjIJCnFDOaWQkf/vH/tQsp5VO2tXdCu79mtnZZ7/P83ue3+me28/+fs/uKlWFJEl/Y9QdkCSdHgwESRJgIEiSGgNBkgQYCJKkZvGoOzCoc889t1auXDlQ229/+9ssXbr01HZIajy/NNeGOccee+yxV6rq+/ute9MGwsqVK9m5c+dAbTudDhMTE6e2Q1Lj+aW5Nsw5luSPj7XOKSNJEmAgSJIaA0GSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkS8Cb+pLIkjdLKDfeP7NibJ+fmq1EcIUiSAANBktQYCJIkwECQJDUGgiQJMBAkSY2BIEkCDARJUmMgSJIAA0GS1MwaCEnuTHIgyZM9tV9J8kySJ5J8Mck7etbdlGRvkj1JruipX5JkV1t3a5K0+hlJPt/qjyRZeWp/REnSiTiREcJmYHJG7UHgoqp6D/C/gJsAkqwG1gIXtja3JVnU2twOrAdWtduRfV4H/HlVvQu4Bfj0oD+MJGlwswZCVT0EfGtG7UtVdag9/Cqwoi2vAe6tqoNVtQ/YC1yaZBlwVlU9XFUF3AVc2dNmS1u+D7j8yOhBkjR/TsW3nf4M8Pm2vJxuQBwx1Wqvt+WZ9SNtXgSoqkNJXgXeCbwy80BJ1tMdZTA2Nkan0xmow9PT0wO3lWbj+bUw3Hjxodk3miNzdY4NFQhJ/i1wCLj7SKnPZnWc+vHaHF2s2gRsAhgfH6+JiYmT6e7/1+l0GLStNBvPr4Xh2hF//fVcnGMDv8soyTrgQ8DVbRoIuq/8z+/ZbAXwUquv6FN/Q5ski4G3M2OKSpI09wYKhCSTwL8BPlxVf9mzajuwtr1z6AK6F48frar9wGtJLmvXB64BtvW0WdeWPwJ8uSdgJEnzZNYpoyT3ABPAuUmmgE/RfVfRGcCD7frvV6vqX1TV7iRbgafoTiXdUFWH266up/uOpSXAA+0GcAfwW0n20h0ZrD01P5ok6WTMGghV9bE+5TuOs/1GYGOf+k7goj71vwKumq0fkqS55SeVJUmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAEGgiSpMRAkSYCBIElqDARJEmAgSJIaA0GSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBJxAISe5MciDJkz21c5I8mOTZdn92z7qbkuxNsifJFT31S5LsautuTZJWPyPJ51v9kSQrT/HPKEk6AScyQtgMTM6obQB2VNUqYEd7TJLVwFrgwtbmtiSLWpvbgfXAqnY7ss/rgD+vqncBtwCfHvSHkSQNbtZAqKqHgG/NKK8BtrTlLcCVPfV7q+pgVe0D9gKXJlkGnFVVD1dVAXfNaHNkX/cBlx8ZPUiS5s+g1xDGqmo/QLs/r9WXAy/2bDfVasvb8sz6G9pU1SHgVeCdA/ZLkjSgxad4f/1e2ddx6sdrc/TOk/V0p50YGxuj0+kM0EWYnp4euK00G8+vheHGiw+N7NhzdY4NGggvJ1lWVfvbdNCBVp8Czu/ZbgXwUquv6FPvbTOVZDHwdo6eogKgqjYBmwDGx8drYmJioM53Oh0GbSvNxvNrYbh2w/0jO/bmyaVzco4NOmW0HVjXltcB23rqa9s7hy6ge/H40Tat9FqSy9r1gWtmtDmyr48AX27XGSRJ82jWEUKSe4AJ4NwkU8CngJuBrUmuA14ArgKoqt1JtgJPAYeAG6rqcNvV9XTfsbQEeKDdAO4AfivJXrojg7Wn5CeTJJ2UWQOhqj52jFWXH2P7jcDGPvWdwEV96n9FCxRJ0uj4SWVJEmAgSJIaA0GSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBBoIkqTEQJEnAqf8/laUFb9c3Xx3Zf6/4/M0fHMlx9dbgCEGSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSMGQgJPnXSXYneTLJPUnOTHJOkgeTPNvuz+7Z/qYke5PsSXJFT/2SJLvauluTZJh+SZJO3sCBkGQ58HPAeFVdBCwC1gIbgB1VtQrY0R6TZHVbfyEwCdyWZFHb3e3AemBVu00O2i9J0mCGnTJaDCxJshj4XuAlYA2wpa3fAlzZltcA91bVwaraB+wFLk2yDDirqh6uqgLu6mkjSZonAwdCVX0T+I/AC8B+4NWq+hIwVlX72zb7gfNak+XAiz27mGq15W15Zl2SNI8G/i6jdm1gDXAB8BfAf0nyU8dr0qdWx6n3O+Z6ulNLjI2N0el0TqLHf216enrgttJsxpbAjRcfGsmxPa/nz6h+xzB3z2HDfLnd+4F9VfWnAEm+APxD4OUky6pqf5sOOtC2nwLO72m/gu4U01Rbnlk/SlVtAjYBjI+P18TExEAd73Q6DNpWms1n797GZ3aN5nsjn796YiTHXYhG9QWGAJsnl87Jc9gw1xBeAC5L8r3tXUGXA08D24F1bZt1wLa2vB1Ym+SMJBfQvXj8aJtWei3JZW0/1/S0kSTNk4FfxlTVI0nuA74OHAK+QffV+9uArUmuoxsaV7XtdyfZCjzVtr+hqg633V0PbAaWAA+0myRpHg01rq2qTwGfmlE+SHe00G/7jcDGPvWdwEXD9EWSNBw/qSxJAgwESVJjIEiSAANBktQYCJIkwECQJDUGgiQJMBAkSY2BIEkCDARJUmMgSJIAA0GS1BgIkiTAQJAkNQaCJAkwECRJjYEgSQIMBElSYyBIkgADQZLUGAiSJMBAkCQ1BoIkCRgyEJK8I8l9SZ5J8nSSH0lyTpIHkzzb7s/u2f6mJHuT7ElyRU/9kiS72rpbk2SYfkmSTt6wI4RfA363qt4N/CDwNLAB2FFVq4Ad7TFJVgNrgQuBSeC2JIvafm4H1gOr2m1yyH5Jkk7SwIGQ5CzgfcAdAFX1nar6C2ANsKVttgW4si2vAe6tqoNVtQ/YC1yaZBlwVlU9XFUF3NXTRpI0T4YZIfwA8KfAbyb5RpLPJVkKjFXVfoB2f17bfjnwYk/7qVZb3pZn1iVJ82jxkG3/PvDxqnokya/RpoeOod91gTpO/egdJOvpTi0xNjZGp9M5qQ4fMT09PXBbaTZjS+DGiw+N5Nie1/NnVL9jmLvnsGECYQqYqqpH2uP76AbCy0mWVdX+Nh10oGf783varwBeavUVfepHqapNwCaA8fHxmpiYGKjjnU6HQdtKs/ns3dv4zK5h/rQG9/zVEyM57kJ07Yb7R3bszZNL5+Q5bOApo6r6E+DFJH+nlS4HngK2A+tabR2wrS1vB9YmOSPJBXQvHj/appVeS3JZe3fRNT1tJEnzZNiXMR8H7k7yPcBzwD+jGzJbk1wHvABcBVBVu5NspRsah4Abqupw28/1wGZgCfBAu0mS5tFQgVBVjwPjfVZdfoztNwIb+9R3AhcN0xdJ0nD8pLIkCTAQJEmNgSBJAgwESVJjIEiSAANBktQYCJIkwECQJDUGgiQJMBAkSY2BIEkCDARJUmMgSJIAA0GS1BgIkiTAQJAkNQaCJAkwECRJjYEgSQIMBElSYyBIkgADQZLUGAiSJMBAkCQ1QwdCkkVJvpHkd9rjc5I8mOTZdn92z7Y3JdmbZE+SK3rqlyTZ1dbdmiTD9kuSdHJOxQjhE8DTPY83ADuqahWwoz0myWpgLXAhMAnclmRRa3M7sB5Y1W6Tp6BfkqSTMFQgJFkBfBD4XE95DbClLW8Bruyp31tVB6tqH7AXuDTJMuCsqnq4qgq4q6eNJGmeLB6y/a8CvwB8X09trKr2A1TV/iTntfpy4Ks920212utteWb9KEnW0x1JMDY2RqfTGajT09PTA7eVZjO2BG68+NBIju15PX9G9TuGuXsOGzgQknwIOFBVjyWZOJEmfWp1nPrRxapNwCaA8fHxmpg4kcMerdPpMGhbaTafvXsbn9k17GutwTx/9cRIjrsQXbvh/pEde/Pk0jl5DhvmrP1R4MNJPgCcCZyV5LeBl5Msa6ODZcCBtv0UcH5P+xXAS62+ok9dkjSPBr6GUFU3VdWKqlpJ92Lxl6vqp4DtwLq22TpgW1veDqxNckaSC+hePH60TS+9luSy9u6ia3raSJLmyVyMa28Gtia5DngBuAqgqnYn2Qo8BRwCbqiqw63N9cBmYAnwQLtJkubRKQmEquoAnbb8Z8Dlx9huI7CxT30ncNGp6IskaTB+UlmSBBgIkqTGQJAkAQaCJKkxECRJgIEgSWoMBEkSYCBIkhoDQZIEGAiSpMZAkCQBBoIkqTEQJEmAgSBJagwESRJgIEiSGgNBkgQYCJKkxkCQJAEGgiSpMRAkSYCBIElqDARJEjBEICQ5P8n/SPJ0kt1JPtHq5yR5MMmz7f7snjY3JdmbZE+SK3rqlyTZ1dbdmiTD/ViSpJM1zAjhEHBjVf1d4DLghiSrgQ3AjqpaBexoj2nr1gIXApPAbUkWtX3dDqwHVrXb5BD9kiQNYOBAqKr9VfX1tvwa8DSwHFgDbGmbbQGubMtrgHur6mBV7QP2ApcmWQacVVUPV1UBd/W0kSTNk8WnYidJVgI/BDwCjFXVfuiGRpLz2mbLga/2NJtqtdfb8sx6v+OspzuSYGxsjE6nM1B/p6enB24rzWZsCdx48aGRHNvzev6M6ncMc/ccNnQgJHkb8F+Bn6+q/3Oc6f9+K+o49aOLVZuATQDj4+M1MTFx0v2F7h/NoG2l2Xz27m18Ztcpea110p6/emIkx12Irt1w/8iOvXly6Zw8hw31LqMkf5NuGNxdVV9o5ZfbNBDt/kCrTwHn9zRfAbzU6iv61CVJ82iYdxkFuAN4uqr+U8+q7cC6trwO2NZTX5vkjCQX0L14/GibXnotyWVtn9f0tJEkzZNhxrU/Cvw0sCvJ4632i8DNwNYk1wEvAFcBVNXuJFuBp+i+Q+mGqjrc2l0PbAaWAA+0myRpHg0cCFX1B/Sf/we4/BhtNgIb+9R3AhcN2hdJ0vD8pLIkCTAQJEmNgSBJAgwESVJjIEiSAANBktQYCJIkwECQJDUGgiQJOEVff/1ms+ubr47smwqfv/mDIzmuJM3GEYIkCTAQJEmNgSBJAgwESVJjIEiSAANBktQYCJIkwECQJDUGgiQJMBAkSY2BIEkCDARJUmMgSJKA0ygQkkwm2ZNkb5INo+6PJC00p0UgJFkE/Drwj4DVwMeSrB5tryRpYTktAgG4FNhbVc9V1XeAe4E1I+6TJC0op8t/kLMceLHn8RTwD2ZulGQ9sL49nE6yZ8DjnQu8MmDboeTToziq5pnnl+bUj396qHPsbx9rxekSCOlTq6MKVZuATUMfLNlZVePD7kfqx/NLc22uzrHTZcpoCji/5/EK4KUR9UWSFqTTJRC+BqxKckGS7wHWAttH3CdJWlBOiymjqjqU5F8BvwcsAu6sqt1zeMihp52k4/D80lybk3MsVUdN1UuSFqDTZcpIkjRiBoIkCXiLBUKSlUme7FP/5STvn6XtLyX55Nz1TgtFkk6S8bb835K8Y8Rd0ptMkulRHPe0uKg816rq3426D1qYquoDo+6DdKLeUiOEZlGS/5xkd5IvJVmSZHOSjwAk+UCSZ5L8QZJbk/xOT9vV7dXdc0l+bkT91wi00eUzST6X5Mkkdyd5f5I/TPJskkuTLE1yZ5KvJflGkjWt7ZIk9yZ5IsnngSU9+30+ybkzR69JPpnkl9pyJ8ktSR5K8nSSH07yhXbc/zDf/xY6faTrV9o5uSvJR1v9tiQfbstfTHJnW75umHPmrThCWAV8rKp+NslW4CePrEhyJvAbwPuqal+Se2a0fTfw48D3AXuS3F5Vr89XxzVy7wKuovv1KF8D/inwXuDDwC8CTwFfrqqfadNAjyb578A/B/6yqt6T5D3A1wc49neq6n1JPgFsAy4BvgX87yS3VNWfDfmz6c3pHwN/D/hBul+J8rUkDwEPAT9G9/Nay4Flbfv30v0uuIG8FUcI+6rq8bb8GLCyZ927geeqal97PDMQ7q+qg1X1CnAAGJvLjuq0s6+qdlXVd4HdwI7qvi97F93z6CeADUkeBzrAmcDfAt4H/DZAVT0BPDHAsY98EHMXsLuq9lfVQeA53vgpfi0s7wXuqarDVfUy8PvADwNfAX6sfSv0U8DLSZYBPwL80aAHeyuOEA72LB+mZ/hO/+9MOl7bt+K/j46t9/f/3Z7H36V7LhwGfrKq3vClikmgz3dvzXCIN74AO/MYx+49bu+xtTD1fc6qqm8mORuYpDtaOAf4J8B0Vb026MHeiiOE43kG+IEkK9vjj46wL3rz+T3g42kJkOSHWv0h4OpWuwh4T5+2LwPnJXlnkjOAD81Df/Xm9xDw0SSLknw/3dHoo23dw8DPt22+Anyy3Q9sQb3yqKr/m+RfAr+b5BX++h9WOhH/HvhV4IkWCs/TfWK/HfjNJE8Aj9PnvKqq15P8MvAIsI/uixNpNl+kOw30P+mOQn+hqv6krfsK8BNVtTfJH9MdJQwVCAvuqyuSvK2qptsf9K8Dz1bVLaPulySN2kKbMgL42XZRcDfwdrrvOpKkBW/BjRAkSf0txBGCJKkPA0GSBBgIkqTGQJAkAQaCJKn5f5mki4QY9EnKAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars['Pricecat'].hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "f8febe92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars['DU'].hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "b42efeae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars['Box'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "b317469e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Country'>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars.groupby('Country').size().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "e53e0eb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Box,None'>"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars.groupby('Box')['Pricecat'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "04af8393",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>medium</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Country</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>-</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>China</th>\n",
       "      <td>0</td>\n",
       "      <td>389</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Czech Republic</th>\n",
       "      <td>0</td>\n",
       "      <td>344</td>\n",
       "      <td>162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>France</th>\n",
       "      <td>0</td>\n",
       "      <td>1314</td>\n",
       "      <td>281</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>German</th>\n",
       "      <td>657</td>\n",
       "      <td>2718</td>\n",
       "      <td>3161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iran</th>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Italy</th>\n",
       "      <td>40</td>\n",
       "      <td>69</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Japan</th>\n",
       "      <td>48</td>\n",
       "      <td>3022</td>\n",
       "      <td>2326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Russia</th>\n",
       "      <td>24</td>\n",
       "      <td>1330</td>\n",
       "      <td>188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South Korea</th>\n",
       "      <td>0</td>\n",
       "      <td>1381</td>\n",
       "      <td>913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spain</th>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sweden</th>\n",
       "      <td>7</td>\n",
       "      <td>282</td>\n",
       "      <td>204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Taiwan</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UK</th>\n",
       "      <td>166</td>\n",
       "      <td>305</td>\n",
       "      <td>574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>USA</th>\n",
       "      <td>84</td>\n",
       "      <td>1541</td>\n",
       "      <td>731</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ukraine</th>\n",
       "      <td>0</td>\n",
       "      <td>100</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Uzbekistan</th>\n",
       "      <td>0</td>\n",
       "      <td>76</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                high   low  medium\n",
       "Country                           \n",
       "-                  0     0       2\n",
       "China              0   389     128\n",
       "Czech Republic     0   344     162\n",
       "France             0  1314     281\n",
       "German           657  2718    3161\n",
       "Iran               0    15       0\n",
       "Italy             40    69      56\n",
       "Japan             48  3022    2326\n",
       "Russia            24  1330     188\n",
       "South Korea        0  1381     913\n",
       "Spain              0    29      12\n",
       "Sweden             7   282     204\n",
       "Taiwan             0     7       6\n",
       "UK               166   305     574\n",
       "USA               84  1541     731\n",
       "Ukraine            0   100       6\n",
       "Uzbekistan         0    76       4"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Country')['Pricecat'].value_counts().unstack()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "4a67fde3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Country'>"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAFICAYAAAC8zi5PAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAAAxdUlEQVR4nO3deZicVZn+8e9NgoRdhIBAgASGfQsQMCIqiCziSILLCDIE14iCIOhocOan4AwjzggOqMDgyKYsA6KyRkFkVSB0MBBCYIgQpSGQEBQiSiTJ8/vjnEoqTSXd9dZbXZ1+78911VVVp6qePr09deqsigjMzKwaVut0BczMrP846ZuZVYiTvplZhTjpm5lViJO+mVmFOOmbmVXI0E5XoDcbbbRRjBw5stPVMDNbpUydOvWFiBjes3zAJ/2RI0fS1dXV6WqYma1SJP2+Ubm7d8zMKsRJ38ysQnpN+pKGSZoi6SFJMySdnsvfJOlWSU/k6w3qXnOqpFmSHpd0SF35XpKm58fOlaT2fFtmZtZIX/r0FwLviog/S1oduEfSZOD9wG0RcaakScAk4MuSdgKOBHYGNgN+KWm7iFgMnA9MBO4DbgYOBSaX/l2ZWaW99tprdHd38+qrr3a6Km03bNgwRowYweqrr96n5/ea9CPtyPbnfHf1fAlgHLB/Lr8UuAP4ci6/KiIWAk9JmgXsI2k2sF5E3Asg6TJgPE76Zlay7u5u1l13XUaOHMlg7lCICObPn093dzejRo3q02v61KcvaYikacBc4NaIuB/YJCLm5C88B9g4P31z4Om6l3fnss3z7Z7ljb7eREldkrrmzZvXp2/EzKzm1VdfZcMNNxzUCR9AEhtuuGFTn2j6lPQjYnFEjAZGkFrtu6ysHo1CrKS80de7MCLGRMSY4cNfN83UzKxXgz3h1zT7fTY1eyci/kTqxjkUeF7SpvmLbkr6FACpBb9F3ctGAM/m8hENys3MVhlDhgxh9OjR7Lzzzuy+++6cffbZLFmyBIBLLrmEE044Ybnn77///gNqrVFfZu8Ml/TGfHtN4N3AY8D1wLH5accC1+Xb1wNHSlpD0ihgW2BK7gJaIGlsnrUzoe411gmnrb/sYmZ9suaaazJt2jRmzJjBrbfeys0338zpp5/e6Wr1WV9a+psCt0t6GHiA1Kd/I3AmcJCkJ4CD8n0iYgZwNfAo8HPg+DxzB+AzwP8As4Df4UFcM1uFbbzxxlx44YV897vfZVU5hbAvs3ceBvZoUD4fOHAFrzkDOKNBeRewsvEAM7NVytZbb82SJUuYO3du708eALwi18ysRbVW/ooGVQfSoLKTvplZC5588kmGDBnCxhtvzIYbbsgf//jH5R5/8cUX2WijjTpUu9dz0jczK2jevHkcd9xxnHDCCUhi77335te//jXPPfccAF1dXSxcuJAtttiil0j9Z8BvrWxmNpD89a9/ZfTo0bz22msMHTqUY445hlNOOQWATTbZhHPOOYfDDjuMJUuWsM4663DllVey2moDp33tpG9m1oTFixev9PFx48Yxbty4fqpN8wbO24+ZmbWdk76ZWYU46ZuZVYiTvplZhTjpm5lViJO+mVmFOOlbNXhHUetn5557LjvuuCNHH310S3Fmz57NFVdcUVKtPE/fzCpg5KSbSo03+8z39vqc8847j8mTJy93jOGiRYsYOrS5tFtL+h/5yEearmcjbumbmZXsuOOO48knn+Twww9n/fXXZ+LEiRx88MFMmDCB3//+9xx44IHstttuHHjggfzhD38A4KMf/Sgnnngi++67L1tvvTU//vGPAZg0aRJ33303o0eP5tvf/nbLdXPSNzMr2QUXXMBmm23G7bffzsknn8zUqVO57rrruOKKKzjhhBOYMGECDz/8MEcffTQnnnji0tfNmTOHe+65hxtvvJFJkyYBcOaZZ/L2t7+dadOmcfLJJ7dcNyd9M7M2O/zww1lzzTUBuPfee5d21RxzzDHcc889S583fvx4VlttNXbaaSeef/75ttTFSd/MrM3WXnvtFT5Wv9f+GmussfR2u07ictI3M+tH++67L1dddRUAl19+Ofvtt99Kn7/uuuuyYMGC0r6+k76ZWT8699xzufjii9ltt9344Q9/yDnnnLPS5++2224MHTqU3XffvZSBXA30w3zHjBkTXV1dna7G4FQ/Z/20lzpXj/5Qpe/VmDlzJjvuuGOnq9FvGn2/kqZGxJiez3VL38ysQpz0zcwqxEnfzKxCnPTNzCrESd/MrEKc9M3MKqTXpC9pC0m3S5opaYakk3L5aZKekTQtXw6re82pkmZJelzSIXXle0manh87V/VL0czMBpG+bK28zjrrAGknzV122aVf6tWXPT4XAV+IiAclrQtMlXRrfuzbEfGt+idL2gk4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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars.groupby('Country')['DU'].value_counts().unstack().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "cfd4579a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Engine'>"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars.groupby('Engine')['Pricecat'].value_counts().unstack().plot(kind='bar', stacked=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "21e3ff53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1353936.4108448594"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].sum() / len(cars['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "d2afe29c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1353936.4108448594"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "39010f41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "680000.0"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "price_sorted = cars['Price'].sort_values().reset_index(drop=True)\n",
    "ind_1, ind_2 = int(len(price_sorted) / 2), int(len(price_sorted)/ 2 + 1)\n",
    "(price_sorted[ind_1] + price_sorted[ind_2]) / 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "cd1c7518",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "680000.0"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "03d258ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1800.0    666\n",
       "1810.0    594\n",
       "1695.0    556\n",
       "1780.0    514\n",
       "1820.0    492\n",
       "         ... \n",
       "1929.0      2\n",
       "1883.0      2\n",
       "2016.0      2\n",
       "2099.0      2\n",
       "1954.0      1\n",
       "Name: Width, Length: 341, dtype: int64"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Width'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "21cb0704",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1800.0\n",
       "Name: Width, dtype: float64"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Width'].mode()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "5b0bd265",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cars['Width'].hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "1186ebd9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    22702.000000\n",
       "mean      1813.402914\n",
       "std         98.746721\n",
       "min       1275.000000\n",
       "25%       1755.000000\n",
       "50%       1810.000000\n",
       "75%       1875.000000\n",
       "max       2360.000000\n",
       "Name: Width, dtype: float64"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Width'].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "917fcb67",
   "metadata": {},
   "source": [
    "### 32. Сгруппируем данные и определим влияет ли цена продукта на кол-во лайков и отзывов на продукты"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "5a80884d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat  Year  \n",
       "high      1927.0            NaN\n",
       "          1928.0            NaN\n",
       "          1943.0            NaN\n",
       "          1944.0            NaN\n",
       "          1945.0            NaN\n",
       "                       ...     \n",
       "medium    2016.0    1855.896649\n",
       "          2017.0    1852.150538\n",
       "          2018.0    1847.367403\n",
       "          2019.0    1846.935278\n",
       "          2020.0    1830.865749\n",
       "Name: Width, Length: 234, dtype: float64"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby(['Pricecat', 'Year'])['Width'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "74d03d85",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat  Year  \n",
       "high      1927.0       NaN\n",
       "          1928.0       NaN\n",
       "          1943.0       NaN\n",
       "          1944.0       NaN\n",
       "          1945.0       NaN\n",
       "                     ...  \n",
       "medium    2016.0    1800.0\n",
       "          2017.0    1800.0\n",
       "          2018.0    1890.0\n",
       "          2019.0    1890.0\n",
       "          2020.0    1800.0\n",
       "Name: Width, Length: 234, dtype: float64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby(['Pricecat', 'Year'])['Width'].agg(lambda x: x.value_counts().index[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "97381358",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Width</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1275.0</th>\n",
       "      <td>low</td>\n",
       "      <td>1999.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1395.0</th>\n",
       "      <td>low</td>\n",
       "      <td>1967.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1400.0</th>\n",
       "      <td>low</td>\n",
       "      <td>1998.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1475.0</th>\n",
       "      <td>low</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1495.0</th>\n",
       "      <td>low</td>\n",
       "      <td>2006.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2141.0</th>\n",
       "      <td>medium</td>\n",
       "      <td>2015.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2183.0</th>\n",
       "      <td>medium</td>\n",
       "      <td>2012.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2197.0</th>\n",
       "      <td>medium</td>\n",
       "      <td>1995.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2220.0</th>\n",
       "      <td>medium</td>\n",
       "      <td>2013.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2360.0</th>\n",
       "      <td>medium</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>341 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Pricecat    Year\n",
       "Width                  \n",
       "1275.0      low  1999.0\n",
       "1395.0      low  1967.0\n",
       "1400.0      low  1998.0\n",
       "1475.0      low  2010.0\n",
       "1495.0      low  2006.0\n",
       "...         ...     ...\n",
       "2141.0   medium  2015.0\n",
       "2183.0   medium  2012.0\n",
       "2197.0   medium  1995.0\n",
       "2220.0   medium  2013.0\n",
       "2360.0   medium  2014.0\n",
       "\n",
       "[341 rows x 2 columns]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Width')[['Pricecat', 'Year']].agg(lambda x: x.value_counts().index[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "2cc0fcce",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Price</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20000.0</th>\n",
       "      <td>1750.000000</td>\n",
       "      <td>1750.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23000.0</th>\n",
       "      <td>1550.000000</td>\n",
       "      <td>1550.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25000.0</th>\n",
       "      <td>1756.701457</td>\n",
       "      <td>1756.701457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26500.0</th>\n",
       "      <td>1813.402914</td>\n",
       "      <td>1813.402914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27000.0</th>\n",
       "      <td>1716.701457</td>\n",
       "      <td>1716.701457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33215000.0</th>\n",
       "      <td>1980.000000</td>\n",
       "      <td>1980.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51200000.0</th>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52500000.0</th>\n",
       "      <td>1910.000000</td>\n",
       "      <td>1910.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57000000.0</th>\n",
       "      <td>2018.000000</td>\n",
       "      <td>2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130000000.0</th>\n",
       "      <td>1980.000000</td>\n",
       "      <td>1980.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3690 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    mean       median\n",
       "Price                                \n",
       "20000.0      1750.000000  1750.000000\n",
       "23000.0      1550.000000  1550.000000\n",
       "25000.0      1756.701457  1756.701457\n",
       "26500.0      1813.402914  1813.402914\n",
       "27000.0      1716.701457  1716.701457\n",
       "...                  ...          ...\n",
       "33215000.0   1980.000000  1980.000000\n",
       "51200000.0   2018.000000  2018.000000\n",
       "52500000.0   1910.000000  1910.000000\n",
       "57000000.0   2018.000000  2018.000000\n",
       "130000000.0  1980.000000  1980.000000\n",
       "\n",
       "[3690 rows x 2 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Price')['Width'].agg(['mean', 'median'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "6c67862c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1927.0</th>\n",
       "      <td>1702.000000</td>\n",
       "      <td>1702.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1928.0</th>\n",
       "      <td>1702.000000</td>\n",
       "      <td>1702.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1943.0</th>\n",
       "      <td>1690.000000</td>\n",
       "      <td>1690.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1944.0</th>\n",
       "      <td>1690.000000</td>\n",
       "      <td>1690.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1945.0</th>\n",
       "      <td>1690.000000</td>\n",
       "      <td>1690.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016.0</th>\n",
       "      <td>1835.722773</td>\n",
       "      <td>1825.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017.0</th>\n",
       "      <td>1837.388223</td>\n",
       "      <td>1825.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018.0</th>\n",
       "      <td>1843.292685</td>\n",
       "      <td>1840.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019.0</th>\n",
       "      <td>1855.703341</td>\n",
       "      <td>1850.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020.0</th>\n",
       "      <td>1860.776927</td>\n",
       "      <td>1847.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>78 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               mean  median\n",
       "Year                       \n",
       "1927.0  1702.000000  1702.0\n",
       "1928.0  1702.000000  1702.0\n",
       "1943.0  1690.000000  1690.0\n",
       "1944.0  1690.000000  1690.0\n",
       "1945.0  1690.000000  1690.0\n",
       "...             ...     ...\n",
       "2016.0  1835.722773  1825.0\n",
       "2017.0  1837.388223  1825.0\n",
       "2018.0  1843.292685  1840.0\n",
       "2019.0  1855.703341  1850.0\n",
       "2020.0  1860.776927  1847.0\n",
       "\n",
       "[78 rows x 2 columns]"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Year')['Width'].agg(['mean', 'median'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "6c268ee5",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">mean</th>\n",
       "      <th colspan=\"2\" halign=\"left\">median</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>Price</th>\n",
       "      <th>Year</th>\n",
       "      <th>Price</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Width</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1275.0</th>\n",
       "      <td>3.490000e+05</td>\n",
       "      <td>2006.500000</td>\n",
       "      <td>349000.0</td>\n",
       "      <td>2006.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1395.0</th>\n",
       "      <td>4.757909e+05</td>\n",
       "      <td>1974.210526</td>\n",
       "      <td>220000.0</td>\n",
       "      <td>1967.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1400.0</th>\n",
       "      <td>3.572727e+05</td>\n",
       "      <td>1965.909091</td>\n",
       "      <td>250000.0</td>\n",
       "      <td>1955.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1475.0</th>\n",
       "      <td>2.920000e+05</td>\n",
       "      <td>2009.750000</td>\n",
       "      <td>286500.0</td>\n",
       "      <td>2010.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1495.0</th>\n",
       "      <td>2.055455e+05</td>\n",
       "      <td>2006.181818</td>\n",
       "      <td>190000.0</td>\n",
       "      <td>2006.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2141.0</th>\n",
       "      <td>2.649674e+06</td>\n",
       "      <td>2013.826087</td>\n",
       "      <td>2615000.0</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2183.0</th>\n",
       "      <td>1.213700e+06</td>\n",
       "      <td>2011.100000</td>\n",
       "      <td>1170000.0</td>\n",
       "      <td>2011.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2197.0</th>\n",
       "      <td>4.766667e+06</td>\n",
       "      <td>1997.333333</td>\n",
       "      <td>4300000.0</td>\n",
       "      <td>1995.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2220.0</th>\n",
       "      <td>3.967588e+06</td>\n",
       "      <td>2014.411765</td>\n",
       "      <td>3348000.0</td>\n",
       "      <td>2014.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2360.0</th>\n",
       "      <td>3.442333e+06</td>\n",
       "      <td>2011.066667</td>\n",
       "      <td>2749000.0</td>\n",
       "      <td>2012.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>341 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                mean                  median        \n",
       "               Price         Year      Price    Year\n",
       "Width                                               \n",
       "1275.0  3.490000e+05  2006.500000   349000.0  2006.5\n",
       "1395.0  4.757909e+05  1974.210526   220000.0  1967.0\n",
       "1400.0  3.572727e+05  1965.909091   250000.0  1955.0\n",
       "1475.0  2.920000e+05  2009.750000   286500.0  2010.0\n",
       "1495.0  2.055455e+05  2006.181818   190000.0  2006.0\n",
       "...              ...          ...        ...     ...\n",
       "2141.0  2.649674e+06  2013.826087  2615000.0  2014.0\n",
       "2183.0  1.213700e+06  2011.100000  1170000.0  2011.0\n",
       "2197.0  4.766667e+06  1997.333333  4300000.0  1995.0\n",
       "2220.0  3.967588e+06  2014.411765  3348000.0  2014.0\n",
       "2360.0  3.442333e+06  2011.066667  2749000.0  2012.0\n",
       "\n",
       "[341 rows x 4 columns]"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.pivot_table(index='Width',\n",
    "                   values=['Price', 'Year'],\n",
    "                   aggfunc=['mean', 'median'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03b8da8f",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "e9457581",
   "metadata": {},
   "source": [
    "### 33. Определим меры разброса"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "de564eea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Width\n",
       "1275.0      698000.0\n",
       "1395.0     9040027.0\n",
       "1400.0     7860000.0\n",
       "1475.0     1168000.0\n",
       "1495.0     2261000.0\n",
       "             ...    \n",
       "2141.0    60942500.0\n",
       "2183.0    12137000.0\n",
       "2197.0    14300000.0\n",
       "2220.0    67449000.0\n",
       "2360.0    51635000.0\n",
       "Name: Price, Length: 341, dtype: float64"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Width')['Price'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "fb11f125",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Price\n",
       "20000.0        1750.000000\n",
       "23000.0        1550.000000\n",
       "25000.0        1813.402914\n",
       "26500.0        1813.402914\n",
       "27000.0        1813.402914\n",
       "                  ...     \n",
       "33215000.0     1980.000000\n",
       "51200000.0     2018.000000\n",
       "52500000.0     1910.000000\n",
       "57000000.0     2018.000000\n",
       "130000000.0    1980.000000\n",
       "Name: Width, Length: 3690, dtype: float64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Price')['Width'].agg(lambda x: x.value_counts().index[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "35aad952",
   "metadata": {},
   "outputs": [],
   "source": [
    "carsdf = pd.DataFrame(cars.groupby('Pricecat')['Width'].agg(lambda x: x.value_counts().index[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "81aaf6b7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Pricecat'>"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "carsdf.plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "29029205",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "378.0"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "carsdf['Width'].max() - carsdf['Width'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "da86910b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1747.5"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "carsdf.describe()['Width']['25%']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "3c837ae4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1747.5"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(carsdf['Width'], 25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "f8e595d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "189.0"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.percentile(carsdf['Width'], 75) - np.percentile(carsdf['Width'], 25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "0b702697",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "38073.0 195.12303810672896\n"
     ]
    }
   ],
   "source": [
    "cars_mean = carsdf['Width'].mean()\n",
    "deviations = carsdf['Width'] - cars_mean\n",
    "sq_deviations = deviations ** 2\n",
    "variance_samp = sq_deviations.sum() / (len(carsdf) - 1)\n",
    "std_samp = np.sqrt(variance_samp)\n",
    "print(variance_samp, std_samp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "cdcd1ea4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25382.0 159.3172934743746\n"
     ]
    }
   ],
   "source": [
    "variance_pop = sq_deviations.sum() / (len(carsdf))\n",
    "std_pop = np.sqrt(variance_pop)\n",
    "print(variance_pop, std_pop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "348a61f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "38073.0\n",
      "195.12303810672896\n"
     ]
    }
   ],
   "source": [
    "print(carsdf['Width'].var())\n",
    "print(carsdf['Width'].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "2a326b3e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25382.0\n",
      "159.3172934743746\n"
     ]
    }
   ],
   "source": [
    "print(carsdf['Width'].var(ddof=0))\n",
    "print(carsdf['Width'].std(ddof=0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "d5679b29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat\n",
       "high      69.707958\n",
       "low       83.812126\n",
       "medium    83.811155\n",
       "Name: Width, dtype: float64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Pricecat')['Width'].std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "b9df02be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pricecat</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>high</th>\n",
       "      <td>1955.767057</td>\n",
       "      <td>69.707958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>1770.283652</td>\n",
       "      <td>83.812126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>1860.366759</td>\n",
       "      <td>83.811155</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 mean        std\n",
       "Pricecat                        \n",
       "high      1955.767057  69.707958\n",
       "low       1770.283652  83.812126\n",
       "medium    1860.366759  83.811155"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.groupby('Pricecat')['Width'].agg(['mean', 'std'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "10234d67",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">var</th>\n",
       "      <th colspan=\"2\" halign=\"left\">std</th>\n",
       "      <th colspan=\"2\" halign=\"left\">range_values</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>MP</th>\n",
       "      <th>Torque</th>\n",
       "      <th>MP</th>\n",
       "      <th>Torque</th>\n",
       "      <th>MP</th>\n",
       "      <th>Torque</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pricecat</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>high</th>\n",
       "      <td>22664.120881</td>\n",
       "      <td>30900.673201</td>\n",
       "      <td>150.546076</td>\n",
       "      <td>175.785873</td>\n",
       "      <td>672.0</td>\n",
       "      <td>1000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>low</th>\n",
       "      <td>3457.070821</td>\n",
       "      <td>8178.821951</td>\n",
       "      <td>58.796861</td>\n",
       "      <td>90.436840</td>\n",
       "      <td>500.0</td>\n",
       "      <td>750.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>medium</th>\n",
       "      <td>9591.648244</td>\n",
       "      <td>21945.686405</td>\n",
       "      <td>97.936961</td>\n",
       "      <td>148.140766</td>\n",
       "      <td>700.0</td>\n",
       "      <td>1000.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   var                       std             range_values  \\\n",
       "                    MP        Torque          MP      Torque           MP   \n",
       "Pricecat                                                                    \n",
       "high      22664.120881  30900.673201  150.546076  175.785873        672.0   \n",
       "low        3457.070821   8178.821951   58.796861   90.436840        500.0   \n",
       "medium     9591.648244  21945.686405   97.936961  148.140766        700.0   \n",
       "\n",
       "                  \n",
       "          Torque  \n",
       "Pricecat          \n",
       "high      1000.0  \n",
       "low        750.0  \n",
       "medium    1000.0  "
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def range_values(x):\n",
    "    return x.max() - x.min()\n",
    "\n",
    "cars.pivot_table(index='Pricecat',\n",
    "                   values=['MP', 'Torque'],\n",
    "                   aggfunc=['var', 'std', range_values])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94d22dfb",
   "metadata": {},
   "source": [
    "### Z_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "2b046054",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0 270.86137785217164 158.7212126466625\n",
      "-1.706522860653479\n"
     ]
    }
   ],
   "source": [
    "X = cars['Torque'][0]\n",
    "M = cars['Torque'].mean()\n",
    "sigma = cars['Torque'].std(ddof=0)\n",
    "print(X, M, sigma)\n",
    "z_score = (X - M) / sigma\n",
    "print(z_score)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "e9f12e77",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.4706109 504.2785232315714 504\n"
     ]
    }
   ],
   "source": [
    "z_new = 1.4706109\n",
    "X_new = M + z_new * sigma\n",
    "print(z_new, X_new, round(X_new))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "fc82f4b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       -1.706523\n",
       "1        2.703726\n",
       "2        2.136694\n",
       "3        2.136694\n",
       "4        2.136694\n",
       "           ...   \n",
       "22697   -0.320445\n",
       "22698   -0.068431\n",
       "22699   -0.320445\n",
       "22700   -0.068431\n",
       "22701   -0.068431\n",
       "Name: Torque, Length: 22702, dtype: float64"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scipy.stats.zscore(cars['Torque'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "a07e3d83",
   "metadata": {},
   "outputs": [],
   "source": [
    "germ = cars[cars['Country'] == 'German']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "572d810b",
   "metadata": {},
   "outputs": [],
   "source": [
    "jap = cars[cars['Country'] == 'Japan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "12bfe90b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/ms/dc9w18h97v33y693fcsdwx5h0000gn/T/ipykernel_14897/2322201432.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  germ['z-score'] = scipy.stats.zscore(germ['Torque'])\n"
     ]
    }
   ],
   "source": [
    "germ['z-score'] = scipy.stats.zscore(germ['Torque'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "87528b6e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/ms/dc9w18h97v33y693fcsdwx5h0000gn/T/ipykernel_14897/3451628760.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  jap['z-score'] = scipy.stats.zscore(jap['Torque'])\n"
     ]
    }
   ],
   "source": [
    "jap['z-score'] = scipy.stats.zscore(jap['Torque'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "3dad8ff3",
   "metadata": {},
   "outputs": [],
   "source": [
    "zcars = pd.concat([germ, jap])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "adecabb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "zcars['z-score'].hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "304e5be7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Expense_city</th>\n",
       "      <th>Expense_track</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>fullrobot</th>\n",
       "      <th>z-score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.889672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.889672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.889672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.889672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>11.5</td>\n",
       "      <td>9.2</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.889672</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22589</th>\n",
       "      <td>36552</td>\n",
       "      <td>Honda</td>\n",
       "      <td>variator</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>low</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.024699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22590</th>\n",
       "      <td>36553</td>\n",
       "      <td>Honda</td>\n",
       "      <td>variator</td>\n",
       "      <td>full</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>low</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.024699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22591</th>\n",
       "      <td>36554</td>\n",
       "      <td>Honda</td>\n",
       "      <td>variator</td>\n",
       "      <td>front</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>gasoline</td>\n",
       "      <td>1.6</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>low</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.024699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22648</th>\n",
       "      <td>36611</td>\n",
       "      <td>Nissan</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>hybrid</td>\n",
       "      <td>1.2</td>\n",
       "      <td>brown</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>medium</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.259313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22649</th>\n",
       "      <td>36612</td>\n",
       "      <td>Nissan</td>\n",
       "      <td>automatic</td>\n",
       "      <td>front</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>Japan</td>\n",
       "      <td>hybrid</td>\n",
       "      <td>1.2</td>\n",
       "      <td>gold</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>medium</td>\n",
       "      <td>0</td>\n",
       "      <td>-1.259313</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1317 rows × 61 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id              mk        Box     DU  Seats  Doors Country  \\\n",
       "0          0  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "6          6  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "7          7  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "9          9  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "10        10  Mercedes-Benz   automatic   full    5.0    5.0  German   \n",
       "...      ...             ...        ...    ...    ...    ...     ...   \n",
       "22589  36552          Honda    variator   full    4.0    3.0   Japan   \n",
       "22590  36553          Honda    variator   full    4.0    3.0   Japan   \n",
       "22591  36554          Honda    variator  front    4.0    3.0   Japan   \n",
       "22648  36611         Nissan   automatic  front    5.0    5.0   Japan   \n",
       "22649  36612         Nissan   automatic  front    5.0    5.0   Japan   \n",
       "\n",
       "         Engine  Volume  Color  ...  Expense_city  Expense_track  \\\n",
       "0        diesel     2.9  black  ...          11.5            9.2   \n",
       "6        diesel     2.9  black  ...          11.5            9.2   \n",
       "7        diesel     2.9  black  ...          11.5            9.2   \n",
       "9        diesel     2.9   blue  ...          11.5            9.2   \n",
       "10       diesel     2.9  black  ...          11.5            9.2   \n",
       "...         ...     ...    ...  ...           ...            ...   \n",
       "22589  gasoline     1.6   gray  ...           0.0            0.0   \n",
       "22590  gasoline     1.6  black  ...           0.0            0.0   \n",
       "22591  gasoline     1.6  white  ...           0.0            0.0   \n",
       "22648    hybrid     1.2  brown  ...           0.0            0.0   \n",
       "22649    hybrid     1.2   gold  ...           0.0            0.0   \n",
       "\n",
       "       Consumption_average Expense_average h_Price m_Price l_Price Pricecat  \\\n",
       "0                      9.8           10.35       1       0       0     high   \n",
       "6                      9.8           10.35       1       0       0     high   \n",
       "7                      9.8           10.35       1       0       0     high   \n",
       "9                      9.8           10.35       1       0       0     high   \n",
       "10                     9.8           10.35       1       0       0     high   \n",
       "...                    ...             ...     ...     ...     ...      ...   \n",
       "22589                  0.0            0.00       0       0       1      low   \n",
       "22590                  0.0            0.00       0       0       1      low   \n",
       "22591                  0.0            0.00       0       0       1      low   \n",
       "22648                  0.0            0.00       0       1       0   medium   \n",
       "22649                  0.0            0.00       0       1       0   medium   \n",
       "\n",
       "      fullrobot   z-score  \n",
       "0             0 -1.889672  \n",
       "6             0 -1.889672  \n",
       "7             0 -1.889672  \n",
       "9             0 -1.889672  \n",
       "10            0 -1.889672  \n",
       "...         ...       ...  \n",
       "22589         0 -1.024699  \n",
       "22590         0 -1.024699  \n",
       "22591         0 -1.024699  \n",
       "22648         0 -1.259313  \n",
       "22649         0 -1.259313  \n",
       "\n",
       "[1317 rows x 61 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zcars[zcars['z-score'] < -1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "62fbd5cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Pricecat\n",
       "high      1.601998\n",
       "low      -0.505456\n",
       "medium    0.322928\n",
       "Name: z-score, dtype: float64"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zcars.groupby('Pricecat')['z-score'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "addee653",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2.270200e+04\n",
       "mean     1.353936e+06\n",
       "std      2.493866e+06\n",
       "min      2.000000e+04\n",
       "25%      3.740750e+05\n",
       "50%      6.800000e+05\n",
       "75%      1.420000e+06\n",
       "max      1.300000e+08\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "29fddd78",
   "metadata": {},
   "outputs": [],
   "source": [
    "q1 = cars['Price'].quantile(0.25)\n",
    "q3 = cars['Price'].quantile(0.75)\n",
    "iqr = q3 - q1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "890cd1d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-1194812.5\n",
      "2988887.5\n"
     ]
    }
   ],
   "source": [
    "iqr_outlier_threshold_bottom = q1 - 1.5 * iqr\n",
    "iqr_outlier_threshold_up = q3 + 1.5 * iqr\n",
    "print(iqr_outlier_threshold_bottom)\n",
    "print(iqr_outlier_threshold_up)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "08c7e94a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2154, 60)"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Price'] > iqr_outlier_threshold_up].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "e19181f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.0    554\n",
       "2.0    473\n",
       "4.0    183\n",
       "4.4    128\n",
       "5.5    101\n",
       "3.5     89\n",
       "2.1     58\n",
       "5.7     48\n",
       "2.9     47\n",
       "6.0     47\n",
       "6.2     42\n",
       "2.5     41\n",
       "4.7     39\n",
       "4.5     28\n",
       "4.6     27\n",
       "0.0     26\n",
       "6.6     26\n",
       "5.0     25\n",
       "2.2     23\n",
       "3.6     19\n",
       "5.2     12\n",
       "3.3     11\n",
       "1.5     11\n",
       "5.8      8\n",
       "4.1      7\n",
       "3.8      7\n",
       "5.4      6\n",
       "1.3      6\n",
       "6.8      5\n",
       "6.3      5\n",
       "5.3      5\n",
       "3.9      5\n",
       "1.4      4\n",
       "4.9      4\n",
       "2.8      4\n",
       "1.6      4\n",
       "2.4      3\n",
       "3.7      3\n",
       "4.2      3\n",
       "7.0      3\n",
       "2.3      2\n",
       "5.9      2\n",
       "5.6      2\n",
       "7.7      2\n",
       "6.5      2\n",
       "6.4      1\n",
       "1.8      1\n",
       "3.2      1\n",
       "4.3      1\n",
       "Name: Volume, dtype: int64"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Price'] > iqr_outlier_threshold_up]['Volume'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "becf0bd7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7 series          77\n",
       "Range Rover       63\n",
       "S-Class AMG       51\n",
       "G-Class           50\n",
       "V-Class           47\n",
       "                  ..\n",
       "M-20 «Pobeda»      1\n",
       "Pajero Sport       1\n",
       "Prius              1\n",
       "CL-Class           1\n",
       "M-Class AMG        1\n",
       "Name: Model, Length: 198, dtype: int64"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Price'] > iqr_outlier_threshold_up]['Model'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "5896dde6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    2.270200e+04\n",
       "mean     1.353936e+06\n",
       "std      2.493866e+06\n",
       "min      2.000000e+04\n",
       "25%      3.740750e+05\n",
       "50%      6.800000e+05\n",
       "75%      1.420000e+06\n",
       "max      1.300000e+08\n",
       "Name: Price, dtype: float64"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Price'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "5502ac46",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-4880729.80114657\n",
      "7588602.622836289\n"
     ]
    }
   ],
   "source": [
    "mean = cars['Price'].mean()\n",
    "std = cars['Price'].std()\n",
    "std_outlier_threshold_bottom = mean - 2.5 * std\n",
    "std_outlier_threshold_up = mean + 2.5 * std\n",
    "print(std_outlier_threshold_bottom)\n",
    "print(std_outlier_threshold_up)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "47f5f05c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(534, 60)"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Price'] > std_outlier_threshold_up].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "b864db8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "iqr_cars_no_outliers = cars[cars['Price'] <= iqr_outlier_threshold_up]\n",
    "std_cars_no_outliers = cars[cars['Price'] <= std_outlier_threshold_up]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "4d399df9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1353936.4108448594\n",
      "1087022.9488902923\n"
     ]
    }
   ],
   "source": [
    "print(cars['Price'].mean())\n",
    "print(std_cars_no_outliers['Price'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "996a3e80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "680000.0\n",
      "659000.0\n"
     ]
    }
   ],
   "source": [
    "print(cars['Price'].median())\n",
    "print(std_cars_no_outliers['Price'].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "05e33648",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                        0\n",
       "mk                        0\n",
       "Box                       0\n",
       "DU                        0\n",
       "Seats                     0\n",
       "Doors                     0\n",
       "Country                   0\n",
       "Engine                    0\n",
       "Volume                    0\n",
       "Color                     0\n",
       "Mileage                   0\n",
       "Price                     0\n",
       "Year                      0\n",
       "Car_type                  0\n",
       "Gen                       0\n",
       "Model                     0\n",
       "Drive                   191\n",
       "Boost_type              283\n",
       "Cylinder                247\n",
       "Front_brakes            191\n",
       "Engine_volume             0\n",
       "Width                     0\n",
       "Susp_t                  191\n",
       "Diameter_cyl              0\n",
       "MP                        0\n",
       "Length                    0\n",
       "Car_class               221\n",
       "Wheelbase                 0\n",
       "Cylinders                 0\n",
       "Height                    0\n",
       "Fuel                    419\n",
       "Torque                    0\n",
       "VPC                       0\n",
       "Tank_volume               0\n",
       "Rear_track_width          0\n",
       "Front_track_width         0\n",
       "Curb_weight_kg            0\n",
       "Clearance                 0\n",
       "Engine_Location        1357\n",
       "Maximum_speed             0\n",
       "Wheel_size             1540\n",
       "Transmissions             0\n",
       "Speed_to_100              0\n",
       "Full_weight               0\n",
       "Compression_ratio         0\n",
       "Consumption               0\n",
       "Engine_Power           3562\n",
       "Start_series              0\n",
       "End_Serial                0\n",
       "TVM                       0\n",
       "Trunk_volume_min          0\n",
       "Expense_city              0\n",
       "Expense_track             0\n",
       "Consumption_average       0\n",
       "Expense_average           0\n",
       "h_Price                   0\n",
       "m_Price                   0\n",
       "l_Price                   0\n",
       "Pricecat                  0\n",
       "fullrobot                 0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "2013128c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3562, 62)"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Engine_Power'].isna()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "333d87d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(19140, 62)"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Engine_Power'].notna()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "af771495",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(19140, 62)"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.dropna(subset=['Engine_Power']).shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "3c2e1dc5",
   "metadata": {},
   "outputs": [],
   "source": [
    "cars['Engine_Power_Median'] = cars['Engine_Power'].fillna(42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "8e533c18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>fullrobot</th>\n",
       "      <th>Price_Median</th>\n",
       "      <th>Volume_Median</th>\n",
       "      <th>Engine_Power_Median</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>12902800.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>15709500.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.6</td>\n",
       "      <td>9.85</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>14599000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>11898000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>9.8</td>\n",
       "      <td>10.35</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>15145200.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country  Engine  Volume  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "5   5  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "6   6  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "7   7  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "\n",
       "   Color  ...  Consumption_average  Expense_average  h_Price m_Price l_Price  \\\n",
       "0  black  ...                  9.8            10.35        1       0       0   \n",
       "1  green  ...                  9.6             9.85        1       0       0   \n",
       "5  black  ...                  9.6             9.85        1       0       0   \n",
       "6  black  ...                  9.8            10.35        1       0       0   \n",
       "7  black  ...                  9.8            10.35        1       0       0   \n",
       "\n",
       "  Pricecat fullrobot Price_Median Volume_Median Engine_Power_Median  \n",
       "0     high         0   12902800.0           2.9                  42  \n",
       "1     high         0   15709500.0           2.9                  42  \n",
       "5     high         0   14599000.0           2.9                  42  \n",
       "6     high         0   11898000.0           2.9                  42  \n",
       "7     high         0   15145200.0           2.9                  42  \n",
       "\n",
       "[5 rows x 63 columns]"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars[cars['Engine_Power'].isna()].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "aac8b846",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>Consumption_average</th>\n",
       "      <th>Expense_average</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>fullrobot</th>\n",
       "      <th>Price_Median</th>\n",
       "      <th>Volume_Median</th>\n",
       "      <th>Engine_Power_Median</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>38</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>7.5</td>\n",
       "      <td>7.90</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>5399000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>39</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.0</td>\n",
       "      <td>white</td>\n",
       "      <td>...</td>\n",
       "      <td>6.4</td>\n",
       "      <td>6.60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>5350000.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>40</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>blue</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>7925800.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>41</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>gray</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.45</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>7450000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 63 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    id              mk        Box    DU  Seats  Doors Country  Engine  Volume  \\\n",
       "38  38  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "39  39  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.0   \n",
       "40  40  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "41  41  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "\n",
       "    Color  ...  Consumption_average  Expense_average  h_Price m_Price l_Price  \\\n",
       "38  black  ...                  7.5             7.90        1       0       0   \n",
       "39  white  ...                  6.4             6.60        1       0       0   \n",
       "40   blue  ...                  8.0             8.45        1       0       0   \n",
       "41   gray  ...                  8.0             8.45        1       0       0   \n",
       "\n",
       "   Pricecat fullrobot Price_Median Volume_Median Engine_Power_Median  \n",
       "38     high         0    5399000.0           2.9                  42  \n",
       "39     high         0    5350000.0           2.0                  42  \n",
       "40     high         0    7925800.0           2.9                  42  \n",
       "41     high         0    7450000.0           2.9                  42  \n",
       "\n",
       "[4 rows x 63 columns]"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.iloc[38:42]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "350ed8e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2350000.0"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# hot deck imputation\n",
    "np.random.choice(cars['Price'].dropna())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "9098abd6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>mk</th>\n",
       "      <th>Box</th>\n",
       "      <th>DU</th>\n",
       "      <th>Seats</th>\n",
       "      <th>Doors</th>\n",
       "      <th>Country</th>\n",
       "      <th>Engine</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Color</th>\n",
       "      <th>...</th>\n",
       "      <th>h_Price</th>\n",
       "      <th>m_Price</th>\n",
       "      <th>l_Price</th>\n",
       "      <th>Pricecat</th>\n",
       "      <th>fullrobot</th>\n",
       "      <th>Price_Median</th>\n",
       "      <th>Volume_Median</th>\n",
       "      <th>Engine_Power_Median</th>\n",
       "      <th>Price_Random</th>\n",
       "      <th>Engine_Power_Random</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>12902800.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "      <td>12902800.0</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>green</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>15709500.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "      <td>15709500.0</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>14599000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "      <td>14599000.0</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>11898000.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "      <td>11898000.0</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>automatic</td>\n",
       "      <td>full</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>German</td>\n",
       "      <td>diesel</td>\n",
       "      <td>2.9</td>\n",
       "      <td>black</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>high</td>\n",
       "      <td>0</td>\n",
       "      <td>15145200.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>42</td>\n",
       "      <td>15145200.0</td>\n",
       "      <td>distributed injection (multi-point)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 65 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   id              mk        Box    DU  Seats  Doors Country  Engine  Volume  \\\n",
       "0   0  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "1   1  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "5   5  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "6   6  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "7   7  Mercedes-Benz   automatic  full    5.0    5.0  German  diesel     2.9   \n",
       "\n",
       "   Color  ...  h_Price  m_Price  l_Price Pricecat fullrobot Price_Median  \\\n",
       "0  black  ...        1        0        0     high         0   12902800.0   \n",
       "1  green  ...        1        0        0     high         0   15709500.0   \n",
       "5  black  ...        1        0        0     high         0   14599000.0   \n",
       "6  black  ...        1        0        0     high         0   11898000.0   \n",
       "7  black  ...        1        0        0     high         0   15145200.0   \n",
       "\n",
       "  Volume_Median Engine_Power_Median Price_Random  \\\n",
       "0           2.9                  42   12902800.0   \n",
       "1           2.9                  42   15709500.0   \n",
       "5           2.9                  42   14599000.0   \n",
       "6           2.9                  42   11898000.0   \n",
       "7           2.9                  42   15145200.0   \n",
       "\n",
       "                   Engine_Power_Random  \n",
       "0  distributed injection (multi-point)  \n",
       "1  distributed injection (multi-point)  \n",
       "5  distributed injection (multi-point)  \n",
       "6  distributed injection (multi-point)  \n",
       "7  distributed injection (multi-point)  \n",
       "\n",
       "[5 rows x 65 columns]"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars['Engine_Power_Random'] = cars['Engine_Power'].fillna(np.random.choice(cars['Engine_Power'].dropna()))\n",
    "cars[cars['Engine_Power'].isna()].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "4d86b876",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(22702, 65)"
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cars.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "038f5b89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['direct injection (direct)', 'distributed injection (multi-point)',\n",
       "       'direct injection (direct)', 'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'direct injection (direct)', 'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'direct injection (direct)', 'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'carburetor',\n",
       "       'direct injection (direct)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'carburetor', 'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)',\n",
       "       'distributed injection (multi-point)', 'direct injection (direct)',\n",
       "       'distributed injection (multi-point)'], dtype=object)"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "temps = np.random.choice(cars['Engine_Power'].dropna(), 22702)\n",
    "temps[:100]"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
